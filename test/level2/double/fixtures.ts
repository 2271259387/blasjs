import { complex as _, fortranArrComplex64 as arr64 } from '../../../src/lib/f_func';

const pI = Infinity;
const nI = -Infinity;
const { PI, sin, cos, abs, sqrt } = Math;

const cospi = x => cos(PI * x);
const sinpi = x => sin(PI * x);

const data = {
    matrix_symmetric_packed_8x8: [
        2.024761390077735,
        -1.0457176517867426,
        -0.8962112639605789,
        -0.060634778120552485,
        -0.5013783177950893,
        0.9260627253330198,
        -1.4577072101223822,
        0.09505622698864298,
        0.8476649635960255,
        -1.6243645297605886,
        1.5761581812187344,
        -1.475547635260523,
        -0.14460820731054116,
        -1.0750101908181724,
        0.40654273194492646,
        -0.14727079003896576,
        1.5415930688269568,
        -0.9818556688038707,
        0.4965781726616992,
        1.6969478807230851,
        -0.26073630856812263,
        0.5013218277237272,
        -1.0135396704947914,
        1.6147522354681292,
        0.005641984852495504,
        -2.9048990603455724,
        -1.1071648189687495,
        1.5475669326182715,
        -0.10150344763172572,
        0.042650249796697896,
        -1.5967180142971973,
        0.490967372597059,
        0.421603365384753,
        1.8739038985953016,
        1.0345143239443348,
        0.08181031035401386],
    matrix_symm_nr2_packed_8x8: [
        2.024761390077735, -1.0457176517867426, -0.8962112639605789, -0.060634778120552485, -0.5013783177950893, 0.9260627253330198,
        -1.4577072101223822, 0.09505622698864298, 0.8476649635960255, -1.6243645297605886, 1.5761581812187344, -1.475547635260523,
        -0.14460820731054116,
        -1.0750101908181724,
        0.40654273194492646,
        -0.14727079003896576,
        1.5415930688269568,
        -0.9818556688038707,
        0.4965781726616992,
        1.6969478807230851,
        -0.26073630856812263,
        0.5013218277237272,
        -1.0135396704947914,
        1.6147522354681292,
        0.005641984852495504,
        -2.9048990603455724,
        -1.1071648189687495,
        1.5475669326182715,
        -0.10150344763172572,
        0.042650249796697896,
        -1.5967180142971973,
        0.490967372597059,
        0.421603365384753,
        1.8739038985953016,
        1.0345143239443348,
        0.08181031035401386].reverse(),

    rand0_vector1x8: [
        -0.08252376201716412,
        0.6060734308621007,
        -0.8874201453170976,
        0.10542139019376515,
        0.3528744733184766,
        0.5503933584550523,
        -1.1343309685168443,
        1.4623515387464268],

    matrix_6x6_upper: [ //row i first  A(I,J)
        1.053750863028617, 0, 0, 0, 0, 0,
        0.197684262345795, -1.068692711254786, 0, 0, 0, 0,
        0.2626454586627623, -1.2329011995712644, -0.00372353379218051, 0, 0, 0,
        -0.9740025611125269, 0.6893726977654734, -0.955839103276798, -1.2317070584140966, 0, 0,
        -0.9106806824932887, 0.7412763052602079, 0.06851153327714439, -0.3237507545879617, -1.0865030469936974, 0,
        -0.767790184730859, -1.1197200611269833, -0.4481742366033955, 0.47173637445323024, -1.180490682884277, 1.4702569970829857
    ]

};

const results = {
    sspr: {
        case0: [
            2.0315716098591032,
            -1.0957330579673474, -0.52888625290938407, 1.2598470696961073E-002,
            -1.0392200605795914, 1.7135771687065393, -1.4664069362184962,
            0.15894933070911099, 0.75411189290463332, -1.6132508265122678,
            1.5470376352816384, -1.2616798170168568, -0.45775613390574854,
            - 1.0378096626698443, 0.53106312243660714,
            -0.19269131367313719, 1.8751718610429435, -1.4702858157659620,
            0.55460141617446190, 1.8911677011441483, 4.2196515545185775E-002,
            0.59493111402262855, -1.7010275548546048, 2.6213804316288218, -0.11394076092473959,
            -3.3051755865091579, -1.7314930842551917, 2.8342736808954783, -0.22218220057011706,
            0.92894268838806227, -2.8944382671379145, 0.64513049241996789, 0.93762990952289016,
            2.6787724346172013, -0.62427638245270600, 2.2202823972507417
        ],
        case1: [
            4.1632335251375139, -2.7045082874362265, -9.1342702483018456E-002, 0.45539178074157149, -0.34721516850494361,
            -0.37165749111404978, -0.57141472713904307, -2.5622525532256191E-002, 2.1343717424570627, -2.2486927197608679,
            1.1758816997533543, -1.5951304169961045, 0.86201992449819898, -1.7624980634300442, 0.50015198022593665,
            0.15566204820567009, 1.7358128436993852, -0.92383246105522865, 8.1480614637285953E-003, 2.0305267184877067,
            -0.30615684633362150, 0.62584225623329903, -0.97633915409440486, 1.3016043732248743, 0.21950983905450805,
            -2.9340196509808738, -1.0960511910065915, 1.4540138313430488, -3.7610344328749878E-002, 3.3950479308609172E-002,
            -0.80920360731732544, -4.6874399654679877E-002, 0.49483659947827974, 2.2412288841908357, 0.98449884701617307,
            8.8620481972331078E-002
        ],
        case2: [2.0247614383697510, -1.0457175970077515, -0.89621126651763916, -6.0634776949882507E-002, -0.50137829780578613, 0.92606270313262939,
            -1.4577071666717529, 9.5056228339672089E-002, 16.847664952278137, -1.6243644952774048, 13.576158165931702,
            -1.4755476713180542, 7.8553917855024338, -1.0750101804733276, 4.4065427184104919, -0.14727078378200531,
            1.5415930747985840, -0.98185569047927856, 0.49657818675041199, 1.6969479322433472, -0.26073631644248962,
            9.5013218522071838, -1.0135396718978882, 7.6147522926330566, 5.6419847533106804E-003, 9.5100879669189453E-002,
            -1.1071648597717285, 1.5475668907165527, -0.10150344669818878, 4.2650248855352402E-002, 2.4032819271087646,
            0.49096736311912537, 2.4216033518314362, 1.8739038705825806, 1.0345143079757690, 1.0818103104829788
        ],
        case3: [2.0247614383697510, -1.0457175970077515, 15.103788733482361, -6.0634776949882507E-002, -0.50137829780578613, 0.92606270313262939, -1.4577071666717529,
            12.095056228339672, 0.84766495227813721, 7.3756355047225952, 1.5761581659317017, -1.4755476713180542, -0.14460821449756622, -1.0750101804733276,
            0.40654271841049194, -0.14727078378200531, 9.5415930747985840, -0.98185569047927856, 6.4965781867504120, 1.6969479322433472, 3.7392636835575104,
            0.50132185220718384, -1.0135396718978882, 1.6147522926330566, 5.6419847533106804E-003, -2.9048991203308105, -1.1071648597717285, 1.5475668907165527,
            -0.10150344669818878, 4.0426502488553524, -1.5967180728912354, 3.4909673631191254, 0.42160335183143616, 3.8739038705825806, 1.0345143079757690,
            1.0818103104829788
        ]
    }
};

export const fixture = {
    sgbmv: {
        case0: {
            desc: 'sgbmv, y := alpha*A*x + beta*y, trans="n", kl=1,ku=1,m=6,n=9, alpha=1.5, beta=2',
            input: {
                trans: 'n',
                m: 6,
                n: 9,
                kl: 1,
                ku: 1,
                alpha: 1.5,
                a: [
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                ],
                lda: 3,
                x: [1, 1, 2, 2, 3, 3, 4, 4, 5],
                incx: 1,
                beta: 2.5,
                y: [1, 1, 1, 1, 1, 1],
                incy: 1
            },
            output: {
                y: [4, 1, 4, 1, 4, 1]
            },
        },
        case1: {
            desc: 'sgbmv, y := alpha*A*x + beta*y,n=0',
            input: {
                trans: 'n',
                m: 6,
                n: 0,
                kl: 1,
                ku: 1,
                lda: 3,
                incy: 1,
                incx: 1,
                //
                beta: 2.5,
                alpha: 1.5,

                a: [
                ],
                x: [],

                y: [1, 1, 1, 1, 1, 1],
            },
            output: {
                y: [1, 1, 1, 1, 1, 1]
            },
        },
        case2: {
            desc: 'sgbmv, y := alpha*A*x + beta*y, alpha=0 && beta=1',
            input: {
                trans: 'n',
                m: 6,
                n: 9,
                kl: 1,
                ku: 1,
                lda: 3,
                incy: 1,
                incx: 1,
                //
                beta: 1,
                alpha: 0,

                a: [
                ],
                x: [],

                y: [1, 1, 1, 1, 1, 1],
            },
            output: {
                y: [1, 1, 1, 1, 1, 1]
            },
        },
        case3: {
            desc: 'sgbmv, y := alpha*A*x + beta*y, trans="n", kl=1,ku=1,m=3,n=9, incy=2, alpha=1.5, beta=2',
            input: {
                trans: 'n',
                m: 3,
                n: 9,
                kl: 1,
                ku: 1,
                alpha: 1.5,
                a: [
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                ],
                lda: 3,
                x: [1, 1, 2, 2, 3, 3, 4, 4, 5],
                incx: 1,
                beta: 2.5,
                y: [1, 1, 1, 1, 1, 1],
                incy: 2
            },
            output: {
                y: [4, 1, 1, 1, 4, 1]
            },
        },
        case4: {
            desc: 'sgbmv, y := alpha*A*x + beta*y, trans="n", kl=1,ku=1,m=3,n=9, incy=2, alpha=1.5, beta=0',
            input: {
                trans: 'n',
                m: 3,
                n: 9,
                kl: 1,
                ku: 1,
                alpha: 1.5,
                a: [
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                ],
                lda: 3,
                x: [1, 1, 2, 2, 3, 3, 4, 4, 5],
                incx: 1,
                beta: 0,
                y: [1, 1, 1, 1, 1, 1],
                incy: 2
            },
            output: {
                y: [1.5, 1, -1.5, 1, 1.5, 1]
            },
        },
        case5: {
            desc: 'sgbmv, y := alpha*A*x + beta*y, trans="n", kl=1,ku=1,m=3,n=9, incy=1, alpha=1.5, beta=0',
            input: {
                trans: 'n',
                m: 6,
                n: 9,
                kl: 1,
                ku: 1,
                incx: 1,
                incy: 1,
                lda: 3,
                //
                alpha: 1.5,
                beta: 0,
                //
                a: [
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                ],
                x: [1, 1, 2, 2, 3, 3, 4, 4, 5],
                y: [1, 1, 1, 1, 1, 1],
            },
            output: {
                y: [1.5, -1.5, 1.5, -1.5, 1.5, -1.5]
            },
        },
        case6: {
            desc: 'sgbmv, y := alpha*(A**T)x + beta*y, trans="t", kl=1,ku=1,m=6,n=9, incy=1, alpha=1.5, beta=1',
            input: {
                trans: 't',
                m: 6,
                n: 9,
                kl: 1,
                ku: 1,
                incx: 1,
                incy: 1,
                lda: 3,
                //
                alpha: 1.5,
                beta: 1,
                //
                a: [
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                ],
                x: [1, 1, 2, 2, 3, 3],
                y: [1, 1, 1, 1, 1, 1, 1, 1, 1],
            },
            output: {
                y: [2.5, -0.5, 2.5, -0.5, 2.5, 5.5, -3.5, 1, 1]
            },
        },
        case7: {
            desc: 'sgbmv, y := alpha*A*x + beta*y, trans="n", kl=1,ku=1,m=6,n=9, alpha=1.5, beta=2',
            input: {
                trans: 'n',
                m: 6,
                n: 9,
                kl: 1,
                ku: 1,
                alpha: 0,
                a: [
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                ],
                lda: 3,
                x: [1, 1, 2, 2, 3, 3, 4, 4, 5],
                incx: 1,
                beta: 2.5,
                y: [1, 1, 1, 1, 1, 1],
                incy: 1
            },
            output: {
                y: [2.5, 2.5, 2.5, 2.5, 2.5, 2.5]
            },
        },
        case8: {
            desc: 'sgbmv, y := alpha*A*x + beta*y, trans="n", incx=-1,incy=-1 kl=1,ku=1,m=6,n=9, alpha=1, beta=0',
            input: {
                trans: 'n',
                m: 6,
                n: 9,
                kl: 1,
                ku: 1,
                alpha: 1,
                a: [
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                    -1, 2, -1,
                ],
                lda: 3,
                x: [1, 1, 2, 2, 3, 3, 4, 4, 3],
                incx: -1,
                beta: 0,
                y: [9, 0, 0, 0, 0, -9],
                incy: -1
            },
            output: {
                //incy=1, [ 1, -1, 1, -1, 1, -1 ],
                //incy=-1, [ -1, 1, -1, 1, -1, 1 ]
                //incx=-1, incy=1, [ 2, 1, 1, -1, 1, -1 ]
                //incx=-1, incy=-1, [ -1, 1, -1, 1, 1, 2 ]
                y: [-1, 1, -1, 1, 1, 2]
                //2, 1, 1, -1, 1, -1
            },
        },
    },
    sgbmvErrors: {
        case0: {
            desc: 'sgbmv, trans != ("n","t")',
            input: {
                trans: 'x',
                m: 6,
                n: 9,
                kl: 1,
                ku: 1,
                incy: 1,
                incx: 1,
                alpha: 1.5,
                a: [
                ],
                lda: 3,
                x: [],
                beta: 2.5,
                y: [],
            }
        },
        case1: {
            desc: 'sgbmv, n<0',
            input: {
                trans: 'n',
                m: 6,
                n: -1,
                kl: 1,
                ku: 1,
                incy: 1,
                incx: 1,
                alpha: 1.5,
                a: [
                ],
                lda: 3,
                x: [],
                beta: 2.5,
                y: [],
            }
        },
        case2: {
            desc: 'sgbmv, m<0',
            input: {
                trans: 'n',
                m: -6,
                n: 1,
                kl: 1,
                ku: 1,
                incy: 1,
                incx: 1,
                alpha: 1.5,
                a: [
                ],
                lda: 3,
                x: [],
                beta: 2.5,
                y: [],
            }
        },
        case3: {
            desc: 'sgbmv, kl<0',
            input: {
                trans: 'n',
                m: 6,
                n: 1,
                kl: -1,
                ku: 1,
                incy: 1,
                incx: 1,
                alpha: 1.5,
                a: [
                ],
                lda: 3,
                x: [],
                beta: 2.5,
                y: [],
            }
        },
        case4: {
            desc: 'sgbmv, ku<0',
            input: {
                trans: 'n',
                m: 6,
                n: 1,
                kl: 1,
                ku: -1,
                incy: 1,
                incx: 1,
                alpha: 1.5,
                a: [
                ],
                lda: 3,
                x: [],
                beta: 2.5,
                y: [],
            }
        },
        case5: {
            desc: 'sgbmv, ku<0',
            input: {
                trans: 'n',
                m: 6,
                n: 1,
                kl: 1,
                ku: 1,
                incy: 1,
                incx: 1,
                alpha: 1.5,
                a: [
                ],
                lda: 2,
                x: [],
                beta: 2.5,
                y: [],
            }
        },
        case6: {
            desc: 'sgbmv, incy=0',
            input: {
                trans: 'n',
                m: 6,
                n: 1,
                kl: 1,
                ku: 1,
                incy: 0,
                incx: 1,
                alpha: 1.5,
                a: [
                ],
                lda: 3,
                x: [],
                beta: 2.5,
                y: [],
            }
        },
        case7: {
            desc: 'sgbmv, incx=0',
            input: {
                trans: 'n',
                m: 6,
                n: 1,
                kl: 1,
                ku: 1,
                incy: 1,
                incx: 0,
                alpha: 1.5,
                a: [
                ],
                lda: 3,
                x: [],
                beta: 2.5,
                y: [],
            }
        },
    },
    sgemv: {
        case0: {
            desc: 'sgemv, y := alpha*A*x + beta*y, trans="n"',
            input: {
                trans: 'n',
                m: 6,
                n: 9,
                alpha: 1.5,
                a: [
                    -0.05487747, 0.25014132, 0.61824329, -0.17262350, -2.22390027, -1.2636144,
                    0.35872890, -0.01104548, -0.94064916, -0.11582532, -0.81496871, 0.2422635,
                    -1.42509839, 0.36594112, 0.24841265, 0.06528818, 0.01915639, 0.2573384,
                    -0.64901008, -0.11916876, 0.66413570, 1.10096910, 0.14377148, -0.1177536,
                    -0.91206837, -1.43758624, -0.79708953, 1.25408311, 0.77214219, -0.2195156,
                    -0.42481028, -0.41898010, 0.99698686, -0.27577803, 1.25601882, 0.6466744,
                    1.29931230, -0.87326211, 0.00837096, -0.88087172, 0.59625902, 0.1197176,
                    -0.28217388, 1.45598840, 0.22901959, 0.99654393, 0.78185918, -0.7767766,
                    -0.61598991, 0.04658030, -1.13038578, 0.57671878, -1.28074943, 1.6254473
                ],
                lda: 6,
                x: [1, 1, 2, 2, 3, 3, 4, 4, 5],
                incx: 1,
                beta: 2.5,
                y: [1, 1, 1, 1, 1, 1],
                incy: 1
            },
            output: { //data generated by fortran sgemv
                y: [-7.7995958197861910, -0.90987740363925695, -1.3999755270779133, 14.987896066159010, 6.2202929537743330, 11.557443037629128]
            },
        },
        case1: {
            desc: 'sgemv, y := alpha*A*x + beta*y, trans="n", incx=-1, incy=-1',
            input: {
                trans: 'n',
                m: 6,
                n: 9,
                alpha: 1.5,
                a: [
                    -0.05487747, 0.25014132, 0.61824329, -0.17262350, -2.22390027, -1.2636144,
                    0.35872890, -0.01104548, -0.94064916, -0.11582532, -0.81496871, 0.2422635,
                    -1.42509839, 0.36594112, 0.24841265, 0.06528818, 0.01915639, 0.2573384,
                    -0.64901008, -0.11916876, 0.66413570, 1.10096910, 0.14377148, -0.1177536,
                    -0.91206837, -1.43758624, -0.79708953, 1.25408311, 0.77214219, -0.2195156,
                    -0.42481028, -0.41898010, 0.99698686, -0.27577803, 1.25601882, 0.6466744,
                    1.29931230, -0.87326211, 0.00837096, -0.88087172, 0.59625902, 0.1197176,
                    -0.28217388, 1.45598840, 0.22901959, 0.99654393, 0.78185918, -0.7767766,
                    -0.61598991, 0.04658030, -1.13038578, 0.57671878, -1.28074943, 1.6254473
                ],
                lda: 6,
                x: [1, 1, 2, 2, 3, 3, 4, 4, 5],
                incx: -1,
                beta: 0.0,
                y: [1, 1, 1, 1, 1, 1],
                incy: -1
            },
            output: {
                y: [-4.4250261895358562, -12.524016615003347, 7.8897808715701103, 1.5491376277059317, -4.6228371150791645, -12.558390671387315]
            },
        },
        case2: {
            desc: 'sgemv, y := alpha*A*x + beta*y, trans="n"',
            input: {
                trans: 'n',
                m: 6,
                n: 9,
                alpha: 1.5,
                a: [
                    -0.05487747, 0.25014132, 0.61824329, -0.17262350, -2.22390027, -1.2636144,
                    0.35872890, -0.01104548, -0.94064916, -0.11582532, -0.81496871, 0.2422635,
                    -1.42509839, 0.36594112, 0.24841265, 0.06528818, 0.01915639, 0.2573384,
                    -0.64901008, -0.11916876, 0.66413570, 1.10096910, 0.14377148, -0.1177536,
                    -0.91206837, -1.43758624, -0.79708953, 1.25408311, 0.77214219, -0.2195156,
                    -0.42481028, -0.41898010, 0.99698686, -0.27577803, 1.25601882, 0.6466744,
                    1.29931230, -0.87326211, 0.00837096, -0.88087172, 0.59625902, 0.1197176,
                    -0.28217388, 1.45598840, 0.22901959, 0.99654393, 0.78185918, -0.7767766,
                    -0.61598991, 0.04658030, -1.13038578, 0.57671878, -1.28074943, 1.6254473
                ],
                lda: 6,
                x: [1, 1, 2, 2, 3, 3, 4, 4, 5],
                incx: -1,
                beta: 0,
                y: [1, 1, 1, 1, 1, 1],
                incy: 1
            },
            output: { //data generated by fortran sgemv
                y: [-12.558390671387315, -4.6228371150791645, 1.5491376277059317, 7.8897808715701103, -12.524016615003347, -4.4250261895358562]
            },
        },
        case3: {
            desc: 'sgemv, y := alpha*(A**T)x + beta*y, trans="t"',
            input: {
                trans: 't',
                m: 6,
                n: 9,
                alpha: 1.5,
                a: [
                    -0.05487747, 0.25014132, 0.61824329, -0.17262350, -2.22390027, -1.2636144,
                    0.35872890, -0.01104548, -0.94064916, -0.11582532, -0.81496871, 0.2422635,
                    -1.42509839, 0.36594112, 0.24841265, 0.06528818, 0.01915639, 0.2573384,
                    -0.64901008, -0.11916876, 0.66413570, 1.10096910, 0.14377148, -0.1177536,
                    -0.91206837, -1.43758624, -0.79708953, 1.25408311, 0.77214219, -0.2195156,
                    -0.42481028, -0.41898010, 0.99698686, -0.27577803, 1.25601882, 0.6466744,
                    1.29931230, -0.87326211, 0.00837096, -0.88087172, 0.59625902, 0.1197176,
                    -0.28217388, 1.45598840, 0.22901959, 0.99654393, 0.78185918, -0.7767766,
                    -0.61598991, 0.04658030, -1.13038578, 0.57671878, -1.28074943, 1.6254473
                ],
                lda: 6,
                x: [1, 1, 2, 2, 3, 3],
                incx: -1,
                beta: 1,
                y: [1, 1, 1, 1, 1, 1, 4, 4, 5],
                incy: 1
            },
            output: { //data generated by fortran sgemv
                y: [-2.0157254394143820, -1.4639058979228139, -2.4103632131591439, 2.8775364421308041, -7.3735247328877449, 2.2206097096204758, 4.3736887406557798, 12.966479852795601, 1.2937025949358940]
            },
        },
        case4: {
            desc: 'sgemv, y := alpha*(A**T)x + beta*y, trans="t", beta=1, alpha=0',
            input: {
                trans: 't',
                m: 6,
                n: 9,
                alpha: 0,
                a: [
                    -0.05487747, 0.25014132, 0.61824329, -0.17262350, -2.22390027, -1.2636144,
                    0.35872890, -0.01104548, -0.94064916, -0.11582532, -0.81496871, 0.2422635,
                    -1.42509839, 0.36594112, 0.24841265, 0.06528818, 0.01915639, 0.2573384,
                    -0.64901008, -0.11916876, 0.66413570, 1.10096910, 0.14377148, -0.1177536,
                    -0.91206837, -1.43758624, -0.79708953, 1.25408311, 0.77214219, -0.2195156,
                    -0.42481028, -0.41898010, 0.99698686, -0.27577803, 1.25601882, 0.6466744,
                    1.29931230, -0.87326211, 0.00837096, -0.88087172, 0.59625902, 0.1197176,
                    -0.28217388, 1.45598840, 0.22901959, 0.99654393, 0.78185918, -0.7767766,
                    -0.61598991, 0.04658030, -1.13038578, 0.57671878, -1.28074943, 1.6254473
                ],
                lda: 6,
                x: [1, 1, 2, 2, 3, 3],
                incx: -1,
                beta: 1,
                y: [1, 1, 1, 1, 1, 1, 4, 4, 5],
                incy: 1
            },
            output: { //data generated by fortran sgemv
                y: [1, 1, 1, 1, 1, 1, 4, 4, 5]
            },
        },
        case5: {
            desc: 'sgemv, y := alpha*(A**T)x + beta*y, trans="t", beta=1.5, alpha=0',
            input: {
                trans: 't',
                m: 6,
                n: 9,
                alpha: 0,
                a: [
                    -0.05487747, 0.25014132, 0.61824329, -0.17262350, -2.22390027, -1.2636144,
                    0.35872890, -0.01104548, -0.94064916, -0.11582532, -0.81496871, 0.2422635,
                    -1.42509839, 0.36594112, 0.24841265, 0.06528818, 0.01915639, 0.2573384,
                    -0.64901008, -0.11916876, 0.66413570, 1.10096910, 0.14377148, -0.1177536,
                    -0.91206837, -1.43758624, -0.79708953, 1.25408311, 0.77214219, -0.2195156,
                    -0.42481028, -0.41898010, 0.99698686, -0.27577803, 1.25601882, 0.6466744,
                    1.29931230, -0.87326211, 0.00837096, -0.88087172, 0.59625902, 0.1197176,
                    -0.28217388, 1.45598840, 0.22901959, 0.99654393, 0.78185918, -0.7767766,
                    -0.61598991, 0.04658030, -1.13038578, 0.57671878, -1.28074943, 1.6254473
                ],
                lda: 6,
                x: [1, 1, 2, 2, 3, 3],
                incx: -1,
                beta: 1.5,
                y: [1, 1, 1, 1, 1, 1, 4, 4, 5],
                incy: 1
            },
            output: { //data generated by fortran sgemv
                y: [1, 1, 1, 1, 1, 1, 4, 4, 5].map(v => v * 1.5)
            },
        },
        case6: {
            desc: 'sgemv, y := alpha*(A**T)x + beta*y, trans="t", beta=1.5, alpha=0',
            input: {
                trans: 't',
                m: 3,
                n: 4,
                alpha: 1,
                a: [
                    -0.05487747, 0.25014132, 0.61824329, -0.17262350, -2.22390027, -1.2636144,
                    0.35872890, -0.01104548, -0.94064916, -0.11582532, -0.81496871, 0.2422635,
                    -1.42509839, 0.36594112, 0.24841265, 0.06528818, 0.01915639, 0.2573384,
                    -0.64901008, -0.11916876, 0.66413570, 1.10096910, 0.14377148, -0.1177536,
                    -0.91206837, -1.43758624, -0.79708953, 1.25408311, 0.77214219, -0.2195156,
                    -0.42481028, -0.41898010, 0.99698686, -0.27577803, 1.25601882, 0.6466744,
                    1.29931230, -0.87326211, 0.00837096, -0.88087172, 0.59625902, 0.1197176,
                    -0.28217388, 1.45598840, 0.22901959, 0.99654393, 0.78185918, -0.7767766,
                    -0.61598991, 0.04658030, -1.13038578, 0.57671878, -1.28074943, 1.6254473
                ],
                lda: 6,
                x: [1, 1, 2, 2, 3, 3],
                incx: -2,
                beta: 0,
                y: [1, 1, 1, 1, 1, 1, 4, 4, 5],
                incy: -2
            },
            output: { //data generated by fortran sgemv
                y: [
                    -1.5212320089340210,
                    1.0000000000000000,
                    -3.2950003892183304,
                    1.0000000000000000,
                    0.11344654485583305,
                    1.0000000000000000,
                    0.95389350876212120,
                    4.0000000000000000,
                    5.0000000000000000
                ]
            },
        },
    },
    sgemvErrors: {
        case0: {
            desc: 'trans!="ntc"',
            input: {
                trans: 'x',
                m: 3,
                n: 4,
                alpha: 1,
                lda: 6,
                incx: -2,
                incy: -2,
                a: [],
                x: [],
                y: [],
            }
        },
        case1: {
            desc: 'n<0',
            input: {
                trans: 't',
                m: 3,
                n: -4,
                alpha: 1,
                lda: 6,
                incx: -2,
                incy: -2,
                a: [],
                x: [],
                y: [],
            }
        },
        case2: {
            desc: 'm<0',
            input: {
                trans: 't',
                m: -3,
                n: 4,
                alpha: 1,
                lda: 6,
                incx: -2,
                incy: -2,
                a: [],
                x: [],
                y: [],
            }
        },
        case3: {
            desc: 'lda <max(1,m)',
            input: {
                trans: 't',
                n: 1,
                m: 7,
                alpha: 0,
                beta: 0,
                lda: 6,
                incx: 1,
                incy: 1,
                a: [
                ],
                x: [],
                y: [],
            }
        },
        case4: {
            desc: 'incx=0',
            input: {
                trans: 't',
                n: 1,
                m: 7,
                alpha: 0,
                beta: 0,
                lda: 7,
                incx: 0,
                incy: 1,
                a: [
                ],
                x: [],
                y: [],
            }
        },
        case5: {
            desc: 'incy=0',
            input: {
                trans: 't',
                n: 1,
                m: 7,
                alpha: 0,
                beta: 0,
                lda: 7,
                incx: 1,
                incy: 0,
                a: [
                ],
                x: [],
                y: [],
            }
        },
    },
    sger: {
        case0: {
            desc: 'sger,  A := alpha*x*y**T + A, incx=2, incy=2,n=4,m=3,alpha=1.5',
            input: {
                m: 3,
                n: 4,
                alpha: 1.5,
                a: [
                    -0.05487747, 0.25014132, 0.61824329, -0.17262350, -2.22390027, -1.2636144,
                    0.35872890, -0.01104548, -0.94064916, -0.11582532, -0.81496871, 0.2422635,
                    -1.42509839, 0.36594112, 0.24841265, 0.06528818, 0.01915639, 0.2573384,
                    -0.64901008, -0.11916876, 0.66413570, 1.10096910, 0.14377148, -0.1177536,
                    -0.91206837, -1.43758624, -0.79708953, 1.25408311, 0.77214219, -0.2195156,
                    -0.42481028, -0.41898010, 0.99698686, -0.27577803, 1.25601882, 0.6466744,
                    1.29931230, -0.87326211, 0.00837096, -0.88087172, 0.59625902, 0.1197176,
                    -0.28217388, 1.45598840, 0.22901959, 0.99654393, 0.78185918, -0.7767766,
                    -0.61598991, 0.04658030, -1.13038578, 0.57671878, -1.28074943, 1.6254473
                ],
                lda: 6,
                x: [0.10330280, 0.62787610, 0.09179221, 0.10161032, 0.33920221, 0.93821373],
                incx: 2,
                y: [0.823443247, 0.615896282, 0.502300758, 0.008093905, 0.222554779, 0.787857479,
                    0.874444904, 0.613885907, 0.617612043],
                incy: 2
            },
            expect: { //data generated by fortran sgemv
                a: [7.2718515354917246E-002,
                    0.36351983515259478,
                    1.0372139062035037,

                    0.43656249423752236,
                    5.8115462974502208E-002,
                    -0.68507688152110546,

                    -1.3906126226474256,
                    0.39658429928803307,
                    0.36164925525028524,

                    -0.51351115308794015,
                    1.2320879450036237E-003,
                    1.1090561402548120
                ]
            },
        },
        case1: {
            desc: 'sger,  A := alpha*x*y**T + A, incx=-2, incy=-2,n=4,m=3,alpha=1.5',
            input: {
                m: 3,
                n: 4,
                alpha: 1.5,
                a: [
                    -0.05487747, 0.25014132, 0.61824329, -0.17262350, -2.22390027, -1.2636144,
                    0.35872890, -0.01104548, -0.94064916, -0.11582532, -0.81496871, 0.2422635,
                    -1.42509839, 0.36594112, 0.24841265, 0.06528818, 0.01915639, 0.2573384,
                    -0.64901008, -0.11916876, 0.66413570, 1.10096910, 0.14377148, -0.1177536,
                    -0.91206837, -1.43758624, -0.79708953, 1.25408311, 0.77214219, -0.2195156,
                    -0.42481028, -0.41898010, 0.99698686, -0.27577803, 1.25601882, 0.6466744,
                    1.29931230, -0.87326211, 0.00837096, -0.88087172, 0.59625902, 0.1197176,
                    -0.28217388, 1.45598840, 0.22901959, 0.99654393, 0.78185918, -0.7767766,
                    -0.61598991, 0.04658030, -1.13038578, 0.57671878, -1.28074943, 1.6254473
                ],
                lda: 6,
                x: [0.10330280, 0.62787610, 0.09179221, 0.10161032, 0.33920221, 0.93821373],
                incx: -2,
                y: [0.823443247, 0.615896282, 0.502300758, 0.008093905, 0.222554779, 0.787857479,
                    0, 0.613885907, 0.617612043],
                incy: -2
            },
            expect: { //data generated by fortran sgemv
                a: [
                    -5.4877471178770065E-002, 0.25014132261276245, 0.61824327707290649,
                    0.47196548709709463, 1.9597711867927137E-002, -0.90616335526003555,
                    -1.1695261489084956, 0.43510205039460814, 0.32624626239071297,
                    -0.23003943308711516, -5.7902458525016520E-003, 0.79173168103747149
                ]
            },
        },
        case2: {
            desc: 'sger,  A := alpha*x*y**T + A, incx=-2, incy=-2,n=4,m=3,alpha=0',
            input: {
                m: 3,
                n: 4,
                alpha: 0,
                a: [
                    -0.05487747, 0.25014132, 0.61824329, -0.17262350, -2.22390027, -1.2636144,
                    0.35872890, -0.01104548, -0.94064916, -0.11582532, -0.81496871, 0.2422635,
                    -1.42509839, 0.36594112, 0.24841265, 0.06528818, 0.01915639, 0.2573384,
                    -0.64901008, -0.11916876, 0.66413570, 1.10096910, 0.14377148, -0.1177536,
                    -0.91206837, -1.43758624, -0.79708953, 1.25408311, 0.77214219, -0.2195156,
                    -0.42481028, -0.41898010, 0.99698686, -0.27577803, 1.25601882, 0.6466744,
                    1.29931230, -0.87326211, 0.00837096, -0.88087172, 0.59625902, 0.1197176,
                    -0.28217388, 1.45598840, 0.22901959, 0.99654393, 0.78185918, -0.7767766,
                    -0.61598991, 0.04658030, -1.13038578, 0.57671878, -1.28074943, 1.6254473
                ],
                lda: 6,
                x: [0.10330280, 0.62787610, 0.09179221, 0.10161032, 0.33920221, 0.93821373],
                incx: -2,
                y: [0.823443247, 0.615896282, 0.502300758, 0.008093905, 0.222554779, 0.787857479,
                    0, // this ZERO!!! will cause the first "column" to be unchanged in "expect"
                    0.613885907, 0.617612043],
                incy: -2
            },
            expect: { //data generated by fortran sgemv
                a: [
                    -5.4877471178770065E-002, 0.25014132261276245, 0.61824327707290649,
                    0.35872888565063477, -1.1045480147004128E-002, -0.94064915180206299,
                    -1.4250984191894531, 0.36594110727310181, 0.24841265380382538,
                    -0.64901006221771240, -0.11916875839233398, 0.66413569450378418
                ]
            },
        },
    },
    sgerError: {
        case0: {
            desc: 'sger,  m<0',
            input: {
                m: -1,
                n: 4,
                lda: 6,
                incx: 2,
                incy: 2
            },
        },
        case1: {
            desc: 'sger,  n<0',
            input: {
                m: 3,
                n: -2,
                lda: 6,
                incx: 2,
                incy: 2
            },
        },
        case2: {
            desc: 'sger,  lda<m',
            input: {
                m: 3,
                n: 2,
                lda: 2,
                incx: 2,
                incy: 2
            },
        },
        case3: {
            desc: 'sger,  incy=0',
            input: {
                m: 3,
                n: 2,
                lda: 5,
                incx: 0,
                incy: 2
            },
        },
        case4: {
            desc: 'sger,  incx=0',
            input: {
                m: 3,
                n: 2,
                lda: 5,
                incx: 2,
                incy: 0
            },
        }
    },
    ssbmv: {
        case0: {
            desc: 'ssbmv,   y := alpha*A*x + beta*y, "upper matrix", incx=1, incy=1,n=6,alpha=1.5+beta=0.25',
            input: {
                uplo: 'u', //uppermatrix,
                n: 6,
                k: 5,
                alpha: 0.75,
                beta: 0.25,
                lda: 6,
                incx: 1,
                incy: 1,
                y: [
                    -0.17262350264585732,
                    -2.2239002740099374,
                    -1.263614384970583,
                    0.3587288959713519,
                    -0.011045478465663564,
                    -0.9406491626186084
                ],
                x: [-0.17262350264585732,
                - 2.2239002740099374,
                - 1.263614384970583,
                    0.3587288959713519,
                - 0.011045478465663564,
                - 0.9406491626186084],
                //"upper matrix" (nxn symmetric) encoded as a band matrix in BLAS
                a: [
                    0, 0, 0, 0, 0, 1.2629542848807933,
                    0, 0, 0, 0, -0.9285670347135381, -0.2947204467905602,
                    0, 0, 0, -1.1476570092363514, -0.28946157368822334, -0.29921511789731614,
                    0, 0, 0.43568329935571865, -1.237538421929958, -0.22426788527830935, 0.37739564598170106,
                    0, -0.057106774383808755, 0.5036079722337261, 1.085769362145687, -0.6909538396968303, -1.2845993538721883,
                    -0.23570655643950122, -0.5428882550102544, -0.4333103174567822, -0.6494716467962331, 0.726750747385451, 1.1519117540872]
            },
            expect: {
                y: [
                    2.7137399400666355,
                    0.37601484101785054,
                    0.83541208737435735,
                    2.8753927545108686,
                    -2.5523139419510348,
                    0.11808677629424658]
            }
        },
        case1: {
            desc: 'ssbmv,   y := alpha*A*x + beta*y, "lower matrix", incx=1, incy=1,n=6,alpha=1.5+beta=0.25',
            input: {
                uplo: 'l', //uppermatrix,
                n: 6,
                k: 5,
                alpha: 0.75,
                beta: 0.25,
                lda: 6,
                incx: 1,
                incy: 1,
                y: [
                    -0.17262350264585732,
                    -2.2239002740099374,
                    -1.263614384970583,
                    0.3587288959713519,
                    -0.011045478465663564,
                    -0.9406491626186084
                ],
                x: [-0.17262350264585732,
                - 2.2239002740099374,
                - 1.263614384970583,
                    0.3587288959713519,
                - 0.011045478465663564,
                - 0.9406491626186084],
                //"upper matrix" (nxn symmetric) encoded as a band matrix in BLAS
                a: [
                    0.42224244493991137, -0.7566161579452455, -0.5090229720808566,
                    -0.7133912411518395, -0.5207411698065698, -0.8821312454529107,
                    0.7525384253822267, 0.5578293548896909, 0.5946176517754793,
                    -0.08945109276100993, -0.17983183590695262, 0,
                    0.3094478561542928, -0.29360545612871647, -0.459479708224535,
                    0.9853681223466992, 0, 0,
                    -0.0437639313749969, 0.8481489396654069, 0.19752193428575993,
                    0, 0, 0,
                    -0.703576878644526, -0.9738448490388691, 0,
                    0, 0, 0,
                    -0.008812844287604094, 0, 0,
                    0, 0, 0
                ]
            },
            expect: {
                y: [
                    2.0812734977655536,
                    -1.9542666589882982,
                    -2.2440378506435685,
                    -0.68963129420530089,
                    1.5703642633315664,
                    -0.68742543306498216]
            }
        },
        case2: {
            desc: 'ssbmv,   y := alpha*A*x + beta*y, "lower matrix", incx=-1, incy=-1,n=6,alpha=1.5+beta=0.25',
            input: {
                uplo: 'l', //uppermatrix,
                n: 6,
                k: 5,
                alpha: 0.75,
                beta: 0.25,
                lda: 6,
                incx: -1,
                incy: -1,
                y: [
                    -0.17262350264585732,
                    -2.2239002740099374,
                    -1.263614384970583,
                    0.3587288959713519,
                    -0.011045478465663564,
                    -0.9406491626186084
                ],
                x: [-0.17262350264585732,
                - 2.2239002740099374,
                - 1.263614384970583,
                    0.3587288959713519,
                - 0.011045478465663564,
                - 0.9406491626186084],
                //"upper matrix" (nxn symmetric) encoded as a band matrix in BLAS
                a: [
                    0.42224244493991137, -0.7566161579452455, -0.5090229720808566,
                    -0.7133912411518395, -0.5207411698065698, -0.8821312454529107,
                    0.7525384253822267, 0.5578293548896909, 0.5946176517754793,
                    -0.08945109276100993, -0.17983183590695262, 0,
                    0.3094478561542928, -0.29360545612871647, -0.459479708224535,
                    0.9853681223466992, 0, 0,
                    -0.0437639313749969, 0.8481489396654069, 0.19752193428575993,
                    0, 0, 0,
                    -0.703576878644526, -0.9738448490388691, 0,
                    0, 0, 0,
                    -0.008812844287604094, 0, 0,
                    0, 0, 0
                ]
            },
            expect: {
                y: [
                    2.2840235318308029,
                    0.18431556950534489,
                    -1.2952810672982329,
                    1.4444836256888887,
                    0.28382396673364896,
                    0.99512154689519638]
            }
        },
        case3: {
            desc: 'ssbmv,   y := alpha*A*x + beta*y, "lower matrix", incx=2, incy=-2,n=3,alpha=1.5+beta=0.25',
            input: {
                uplo: 'l', //uppermatrix,
                n: 3,
                k: 5,
                alpha: 0.75,
                beta: 0.25,
                lda: 6,
                incx: 2,
                incy: -2,
                y: [
                    -0.17262350264585732,
                    -2.2239002740099374,
                    -1.263614384970583,
                    0.3587288959713519,
                    -0.011045478465663564,
                    -0.9406491626186084
                ],
                x: [
                    -0.17262350264585732,
                    -2.2239002740099374,
                    -1.263614384970583,
                    0.3587288959713519,
                    -0.011045478465663564,
                    -0.9406491626186084],
                //"upper matrix" (nxn symmetric) encoded as a band matrix in BLAS
                a: [
                    0.42224244493991137, -0.7566161579452455, -0.5090229720808566,
                    -0.7133912411518395, -0.5207411698065698, -0.8821312454529107,
                    0.7525384253822267, 0.5578293548896909, 0.5946176517754793,
                    -0.08945109276100993, -0.17983183590695262, 0,
                    0.3094478561542928, -0.29360545612871647, -0.459479708224535,
                    0.9853681223466992, 0, 0,
                    -0.0437639313749969, 0.8481489396654069, 0.19752193428575993,
                    0, 0, 0,
                    -0.703576878644526, -0.9738448490388691, 0,
                    0, 0, 0,
                    -0.008812844287604094, 0, 0,
                    0, 0, 0
                ]
            },
            expect: {
                y: [
                    -0.50847831684910694,
                    -2.2239003181457520,
                    -0.93575624247033118,
                    0.35872888565063477,
                    0.66384203668497299,
                    -0.94064915180206299]
            }
        },
        case4: {
            desc: 'ssbmv,   y := alpha*A*x + beta*y, "lower matrix", trivial, alpha=0, beta=1',
            input: {
                uplo: 'l', //uppermatrix,
                n: 6,
                k: 5,
                alpha: 0,
                beta: 1,
                lda: 6,
                incx: 1,
                incy: 1,
                y: [
                    -0.17262350264585732,
                    -2.2239002740099374,
                    -1.263614384970583,
                    0.3587288959713519,
                    -0.011045478465663564,
                    -0.9406491626186084
                ],
                x: [
                    -0.17262350264585732,
                    -2.2239002740099374,
                    -1.263614384970583,
                    0.3587288959713519,
                    -0.011045478465663564,
                    -0.9406491626186084],
                //"upper matrix" (nxn symmetric) encoded as a band matrix in BLAS
                a: [
                    0.42224244493991137, -0.7566161579452455, -0.5090229720808566,
                    -0.7133912411518395, -0.5207411698065698, -0.8821312454529107,
                    0.7525384253822267, 0.5578293548896909, 0.5946176517754793,
                    -0.08945109276100993, -0.17983183590695262, 0,
                    0.3094478561542928, -0.29360545612871647, -0.459479708224535,
                    0.9853681223466992, 0, 0,
                    -0.0437639313749969, 0.8481489396654069, 0.19752193428575993,
                    0, 0, 0,
                    -0.703576878644526, -0.9738448490388691, 0,
                    0, 0, 0,
                    -0.008812844287604094, 0, 0,
                    0, 0, 0
                ]
            },
            expect: {
                y: [
                    -0.17262350264585732,
                    -2.2239002740099374,
                    -1.263614384970583,
                    0.3587288959713519,
                    -0.011045478465663564,
                    -0.9406491626186084]
            }
        },
        case5: {
            desc: 'ssbmv,   y := alpha*A*x + beta*y, "lower matrix",  alpha=0.25, beta=1',
            input: {
                uplo: 'l', //uppermatrix,
                n: 6,
                k: 5,
                alpha: 0.25,
                beta: 1,
                lda: 6,
                incx: 1,
                incy: 1,
                y: [
                    -0.17262350264585732,
                    -2.2239002740099374,
                    -1.263614384970583,
                    0.3587288959713519,
                    -0.011045478465663564,
                    -0.9406491626186084
                ],
                x: [-0.17262350264585732,
                -2.2239002740099374,
                -1.263614384970583,
                    0.3587288959713519,
                -0.011045478465663564,
                -0.9406491626186084],
                //"upper matrix" (nxn symmetric) encoded as a band matrix in BLAS
                a: [
                    0.42224244493991137, -0.7566161579452455, -0.5090229720808566,
                    -0.7133912411518395, -0.5207411698065698, -0.8821312454529107,
                    0.7525384253822267, 0.5578293548896909, 0.5946176517754793,
                    -0.08945109276100993, -0.17983183590695262, 0,
                    0.3094478561542928, -0.29360545612871647, -0.459479708224535,
                    0.9853681223466992, 0, 0,
                    -0.0437639313749969, 0.8481489396654069, 0.19752193428575993,
                    0, 0, 0,
                    -0.703576878644526, -0.9738448490388691, 0,
                    0, 0, 0,
                    -0.008812844287604094, 0, 0,
                    0, 0, 0
                ]
            },
            expect: {
                y: [
                    0.53551962404625031,
                    -2.6899975112963719,
                    -1.9063258316600895,
                    9.8957713777981571E-002,
                    0.51332973268319304,
                    -1.0914035335068850
                ]
            }
        },
        case6: {
            desc: 'ssbmv,   y := alpha*A*x + beta*y, "lower matrix", trivial alpha=0, beta=0',
            input: {
                uplo: 'l', //uppermatrix,
                n: 6,
                k: 5,
                alpha: 0,
                beta: 0,
                lda: 6,
                incx: 1,
                incy: 1,
                y: [
                    -0.17262350264585732,
                    -2.2239002740099374,
                    -1.263614384970583,
                    0.3587288959713519,
                    -0.011045478465663564,
                    -0.9406491626186084
                ],
                x: [-0.17262350264585732,
                -2.2239002740099374,
                -1.263614384970583,
                    0.3587288959713519,
                -0.011045478465663564,
                -0.9406491626186084],
                //"upper matrix" (nxn symmetric) encoded as a band matrix in BLAS
                a: [
                    0.42224244493991137, -0.7566161579452455, -0.5090229720808566,
                    -0.7133912411518395, -0.5207411698065698, -0.8821312454529107,
                    0.7525384253822267, 0.5578293548896909, 0.5946176517754793,
                    -0.08945109276100993, -0.17983183590695262, 0,
                    0.3094478561542928, -0.29360545612871647, -0.459479708224535,
                    0.9853681223466992, 0, 0,
                    -0.0437639313749969, 0.8481489396654069, 0.19752193428575993,
                    0, 0, 0,
                    -0.703576878644526, -0.9738448490388691, 0,
                    0, 0, 0,
                    -0.008812844287604094, 0, 0,
                    0, 0, 0
                ]
            },
            expect: {
                y: [0, 0, 0, 0, 0, 0]
            }
        },
    },
    ssbmvErrors: {
        case0: {
            desc: 'uplo!="u,l"',
            input: {
                uplo: 'x',
                n: 6,
                k: 5,
                alpha: 0,
                beta: 0,
                lda: 6,
                incx: 1,
                incy: 1,
                a: [
                ],
                x: [],
                y: [],
            }
        },
        case1: {
            desc: 'n<0',
            input: {
                uplo: 'l',
                n: -1,
                k: 5,
                alpha: 0,
                beta: 0,
                lda: 6,
                incx: 1,
                incy: 1,
                a: [
                ],
                x: [],
                y: [],
            }
        },
        case2: {
            desc: 'k<0',
            input: {
                uplo: 'l',
                n: 1,
                k: -1,
                alpha: 0,
                beta: 0,
                lda: 6,
                incx: 1,
                incy: 1,
                a: [
                ],
                x: [],
                y: [],
            }
        },
        case3: {
            desc: 'lda <k+1',
            input: {
                uplo: 'l',
                n: 1,
                k: 7,
                alpha: 0,
                beta: 0,
                lda: 6,
                incx: 1,
                incy: 1,
                a: [
                ],
                x: [],
                y: [],
            }
        },
        case4: {
            desc: 'incx=0',
            input: {
                uplo: 'l',
                n: 1,
                k: 3,
                alpha: 0,
                beta: 0,
                lda: 6,
                incx: 0,
                incy: 1,
                a: [
                ],
                x: [],
                y: [],
            }
        },
        case5: {
            desc: 'incy=0',
            input: {
                uplo: 'l',
                n: 1,
                k: 3,
                alpha: 0,
                beta: 0,
                lda: 6,
                incx: 1,
                incy: 0,
                a: [
                ],
                x: [],
                y: [],
            }
        },
    },
    sspmv: {
        //  y := alpha*A*x + beta*y,
        case0: {
            desc: 'uplo=u, n=8, incx=1, incy=1, alpha=1, beta=0.25',
            input: {
                uplo: 'u',
                n: 8,
                alpha: 1,
                incx: 1,
                beta: 0.25,
                incy: 1,
                x: [
                    -0.08252376201716412,
                    0.6060734308621007,
                    -0.8874201453170976,
                    0.10542139019376515,
                    0.3528744733184766,
                    0.5503933584550523,
                    -1.1343309685168443,
                    1.4623515387464268
                ],
                y: [0.7021167106675735,
                    2.5071111484833684,
                    -1.890027143624024,
                    -0.5898127901911715,
                    -1.7145022968458246,
                    -0.4209978978166964,
                    0.310141376504687,
                    1.7025705860144955],
                ap: data.matrix_symmetric_packed_8x8.slice()
            },
            expect: {
                y: [
                    -0.96717789113031305,
                    2.1647171752586969,
                    -6.2618818235773670,
                    -0.28748768382407186,
                    3.5511096434863134,
                    6.2163906955162798,
                    -3.8875544026997284,
                    2.0548975501649309]
            }
        },
        //  y := alpha*A*x + beta*y,
        case1: {
            desc: 'uplo=u, n=8, incx=-1, incy=-1, alpha=1, beta=0.25',
            input: {
                uplo: 'u',
                n: 8,
                alpha: 1,
                incx: -1,
                beta: 0.25,
                incy: -1,
                x: [
                    -0.08252376201716412,
                    0.6060734308621007,
                    -0.8874201453170976,
                    0.10542139019376515,
                    0.3528744733184766,
                    0.5503933584550523,
                    -1.1343309685168443,
                    1.4623515387464268
                ],
                y: [0.7021167106675735,
                    2.5071111484833684,
                    -1.890027143624024,
                    -0.5898127901911715,
                    -1.7145022968458246,
                    -0.4209978978166964,
                    0.310141376504687,
                    1.7025705860144955],
                ap: data.matrix_symmetric_packed_8x8.slice()
            },
            expect: {
                y: [
                    -1.7251108158053823,
                    4.9291648942353898,
                    -3.2171098666478279,
                    0.11384660016321080,
                    -3.3658783555330647,
                    3.1501275434227995,
                    -2.8188776853639128,
                    4.6340510576024654
                ]
            }
        }, //case
        //  y := alpha*A*x + beta*y,
        case2: {
            desc: 'uplo=u, n=8, incx=-1, incy=-1, alpha=0, beta=1',
            input: {
                uplo: 'u',
                n: 8,
                alpha: 0,
                incx: -1,
                beta: 1,
                incy: -1,
                x: [
                    -0.08252376201716412,
                    0.6060734308621007,
                    -0.8874201453170976,
                    0.10542139019376515,
                    0.3528744733184766,
                    0.5503933584550523,
                    -1.1343309685168443,
                    1.4623515387464268
                ],

                y: [0.7021167106675735,
                    2.5071111484833684,
                    -1.890027143624024,
                    -0.5898127901911715,
                    -1.7145022968458246,
                    -0.4209978978166964,
                    0.310141376504687,
                    1.7025705860144955],

                ap: data.matrix_symmetric_packed_8x8.slice()
            },
            expect: {
                y: [
                    0.70211672782897949,
                    2.5071110725402832,
                    -1.8900271654129028,
                    -0.58981281518936157,
                    -1.7145023345947266,
                    -0.42099788784980774,
                    0.31014138460159302,
                    1.7025705575942993]
            }
        },
        //  y := alpha*A*x + beta*y,
        case3: {
            desc: '(trivial)uplo=u, n=8, incx=-1, incy=-1, alpha=0, beta=0',
            input: {
                uplo: 'u',
                n: 8,
                alpha: 0,
                incx: -1,
                beta: 0,
                incy: -1,
                x: [
                    -0.08252376201716412,
                    0.6060734308621007,
                    -0.8874201453170976,
                    0.10542139019376515,
                    0.3528744733184766,
                    0.5503933584550523,
                    -1.1343309685168443,
                    1.4623515387464268
                ],
                y: [0.7021167106675735,
                    2.5071111484833684,
                    -1.890027143624024,
                    -0.5898127901911715,
                    -1.7145022968458246,
                    -0.4209978978166964,
                    0.310141376504687,
                    1.7025705860144955],
                ap: data.matrix_symmetric_packed_8x8.slice()
            },
            expect: {
                y: [
                    0, 0, 0, 0, 0, 0, 0, 0
                ]
            }
        },
        //  y := alpha*A*x + beta*y,
        case4: {
            desc: 'uplo=l, n=8, incx=-1, incy=-1, beta=1, alpha=1',
            input: {
                uplo: 'l',
                n: 8,
                alpha: 1,
                incx: 1,
                beta: 1,
                incy: 1,
                //x: [1, 0, 0, 0, 0, 0, 0, 0],
                x: [
                    -0.08252376201716412,
                    0.6060734308621007,
                    -0.8874201453170976,
                    0.10542139019376515,
                    0.3528744733184766,
                    0.5503933584550523,
                    -1.1343309685168443,
                    1.4623515387464268
                ],
                y: [0.7021167106675735,
                    2.5071111484833684,
                    -1.890027143624024,
                    -0.5898127901911715,
                    -1.7145022968458246,
                    -0.4209978978166964,
                    0.310141376504687,
                    1.7025705860144955],

                ap: data.matrix_symmetric_packed_8x8.slice()
            },
            expect: {
                y: [
                    2.8154710108834342,
                    5.9284605596693600,
                    -4.8866919583862236,
                    -4.6680190884183741,
                    -1.1643587827344710,
                    -1.1286206109692598,
                    -2.1048056242799813,
                    1.0595167238593439
                ]
            }
        }
    }, //test
    sspmvErrors: {
        case0: {
            desc: 'uplo!="u,l"',
            input: {
                uplo: 'x',
                n: 8,
                alpha: 0,
                beta: 0,
                incx: 1,
                incy: 1,
                ap: [],
                x: [],
                y: [],
            }
        },
        case1: {
            desc: 'n<0',
            input: {
                uplo: 'l',
                n: -8,
                alpha: 0,
                beta: 0,
                incx: 1,
                incy: 1,
                ap: [],
                x: [],
                y: [],
            }
        },
        case2: {
            desc: 'incx=0',
            input: {
                uplo: 'l',
                n: 8,
                alpha: 0,
                beta: 0,
                incx: 0,
                incy: 1,
                ap: [],
                x: [],
                y: [],
            }
        },
        case3: {
            desc: 'incy=0',
            input: {
                uplo: 'l',
                n: 8,
                alpha: 0,
                beta: 0,
                incx: 1,
                incy: 0,
                ap: [],
                x: [],
                y: [],
            }
        },
        case4: {
            desc: 'incx=0',
            input: {
                uplo: 'x',
                n: 8,
                alpha: 0,
                beta: 0,
                incx: 1,
                incy: 1,
                ap: [],
                x: [],
                y: [],
            }
        },
        case5: {
            desc: 'incy=0',
            input: {
                uplo: 'x',
                n: 8,
                alpha: 0,
                beta: 0,
                incx: 1,
                incy: 1,
                ap: [],
                x: [],
                y: [],
            }
        },
    },
    sspr: {
        //SSPR(UPLO,N,ALPHA,X,INCX,AP)
        case0: {
            desc: 'uplo=u, n=8, alpha=1, x={}, incx=1, ap={}',
            input: {
                uplo: 'u',
                n: 8,
                alpha: 1,
                incx: 1,
                x: data.rand0_vector1x8.slice(), // copy
                ap: data.matrix_symmetric_packed_8x8.slice() // copy
            },
            expect: {
                ap: results.sspr.case0.slice() // copy
            }
        },
        case1: {
            desc: 'uplo=u, n=8, alpha=1, x={}, incx=1, ap={}',
            input: {
                uplo: 'l',
                n: 8,
                alpha: 1,
                incx: -1,
                x: data.rand0_vector1x8.slice(),
                ap: data.matrix_symmetric_packed_8x8.slice() // copy
            },
            expect: {
                ap: results.sspr.case1.slice() // copy
            }
        },
        case2: {
            desc: 'uplo=u, n=8, alpha=1, x={}, incx=1, ap={}',
            input: {
                uplo: 'l',
                n: 8,
                alpha: 1,
                incx: -1,
                x: [1, 0, 2, 0, 3, 0, 4, 0], //data.rand0_vector1x8.slice(),
                ap: data.matrix_symmetric_packed_8x8.slice() // copy
            },
            expect: {
                ap: results.sspr.case2.slice() // copy
            }
        },
        case3: {
            desc: 'uplo=u, n=8, alpha=1, x={}, incx=-1, ap={}',
            input: {
                uplo: 'u',
                n: 8,
                alpha: 1,
                incx: -1,
                x: [1, 0, 2, 0, 3, 0, 4, 0], //data.rand0_vector1x8.slice(),
                ap: data.matrix_symmetric_packed_8x8.slice() // copy
            },
            expect: {
                ap: results.sspr.case3.slice() // copy
            }
        },
        case4: {
            desc: 'uplo=u, n=8, alpha=0, x={}, incx=-1, ap={}',
            input: {
                uplo: 'u',
                n: 8,
                alpha: 0,
                incx: -1,
                x: [], //data.rand0_vector1x8.slice(),
                ap: data.matrix_symmetric_packed_8x8.slice() // copy
            },
            expect: {
                ap: data.matrix_symmetric_packed_8x8.slice()  // copy
            }
        }
    },
    ssprErrors: {
        case0: {
            desc: 'uplo=x must fail',
            input: {
                uplo: 'x',
                n: 8,
                alpha: 1,
                incx: 1,
                x: [], // copy
                ap: []
            }
        },
        case1: {
            desc: 'n<0 must fail',
            input: {
                uplo: 'l',
                n: -8,
                alpha: 1,
                incx: 1,
                x: [], // copy
                ap: []
            }
        },
        case2: {
            desc: 'incx == 0, must fail',
            input: {
                uplo: 'l',
                n: 8,
                alpha: 1,
                incx: 0,
                x: [], // copy
                ap: []
            }
        },
    },
    // A := alpha*x*y**T + alpha*y*x**T + A,
    sspr2: {
        //SUBROUTINE SSPR2(UPLO,N,ALPHA,X,INCX,Y,INCY,AP)
        //
        case0: {
            desc: 'uplo=u, n=8, alpha=0.25, x={*}, y={*}, ap={*}, incx=1, incy=1',
            input: {
                uplo: 'u',
                n: 8,
                alpha: 1,
                x: [
                    -0.08252376201716412,
                    0.6060734308621007,
                    -0.8874201453170976,
                    0.10542139019376515,
                    0.3528744733184766,
                    0.5503933584550523,
                    -1.1343309685168443,
                    1.4623515387464268
                ],
                incx: 1,
                y: [
                    0.7021167106675735,
                    2.5071111484833684,
                    -1.890027143624024,
                    -0.5898127901911715,
                    -1.7145022968458246,
                    -0.4209978978166964,
                    0.310141376504687,
                    1.7025705860144955
                ],
                incy: 1,
                ap: data.matrix_symmetric_packed_8x8.slice()
            },
            expect: {
                ap: [
                    1.9088788092259108, -0.82707953752360197, 2.1427755934692527, -0.52773513210600953, -3.8717343654496190,
                    4.2805589628926413, -1.3350154745463545, 1.8894727757654550E-003, 1.1718274256446302, -1.7487222649705982,
                    1.9654044311580279, -1.6299664624518897, 0.70993328171340764, -1.4638852889791973, -0.80346554733966968,
                    0.27391191920031410, 2.6663346814637361, -1.6485120651059919, 0.12756695855303168, 0.60473784680091658,
                    -0.72416518619793635, -0.32070494348856116, -3.6694649960841836, 3.4834429703160943, 0.70738047292609663,
                    -0.85064501113439839, -0.45891415626571330, 0.84396092433016179, 0.78473551646894890, 4.7408108315515065,
                    -5.8714976126722078, -0.19205897856395726, -1.4848080996234678, 2.1953404531188951, -0.44322849686470533,
                    5.0613237343172273
                ]
            }
        },
        case1: {
            desc: 'uplo=u, n=8, alpha=0.25, x={*}, y={*}, ap={*}, incx=-1, incy=-1',
            input: {
                uplo: 'l',
                n: 8,
                alpha: 0.25,
                x: [1, 2, 0, 4, 0, 6, 7, 8],
                incx: -1,
                y: [9, 12, 13, 14, 0, 16, 17, 18],
                incy: -1,
                ap: data.matrix_symmetric_packed_8x8.slice()
            },
            expect: {
                ap: [
                    74.024761438369751, 64.454282402992249, 58.103788733482361, -6.0634776949882507E-002, 45.498621702194214, 26.926062703132629, 31.542292833328247,
                    22.595056228339672, 60.347664952278137, 51.875635504722595, 1.5761581659317017, 40.024452328681946, 22.605391785502434, 28.424989819526672,
                    20.406542718410492, 47.852729216217995, 1.5415930747985840, 36.018144309520721, 19.996578186750412, 27.696947932243347, 17.239263683557510,
                    0.50132185220718384, -1.0135396718978882, 1.6147522926330566, 5.6419847533106804E-003, -2.9048991203308105, 26.892835140228271, 14.547566890716553,
                    18.898496553301811, 12.542650248855352, -1.5967180728912354, 6.9909673631191254, 3.6716033518314362, 13.873903870582581, 8.5345143079757690,
                    4.5818103104829788
                ]
            }
        },
        case2: {
            desc: 'uplo=u, n=8, alpha=0.25, x={*}, y={*}, ap={*}, incx=-1, incy=-1',
            input: {
                uplo: 'u',
                n: 8,
                alpha: 0.25,
                x: [1, 2, 0, 4, 0, 6, 7, 8],
                incx: -1,
                y: [9, 12, 13, 14, 0, 16, 17, 18],
                incy: -1,
                ap: data.matrix_symmetric_packed_8x8.slice()
            },
            expect: {
                ap: [
                    74.024761438369751, 64.454282402992249, 58.603788733482361, 58.939365223050117, 52.998621702194214, 48.926062703132629, -1.4577071666717529,
                    9.5056228339672089E-002, 0.84766495227813721, -1.6243644952774048, 47.576158165931702, 40.024452328681946, 36.855391785502434, -1.0750101804733276,
                    28.406542718410492, 25.852729216217995, 24.291593074798584, 18.518144309520721, 0.49657818675041199, 14.696947932243347, -0.26073631644248962,
                    33.501321852207184, 28.486460328102112, 27.614752292633057, 5.6419847533106804E-003, 16.095100879669189, 5.3928351402282715, 13.547566890716553,
                    22.398496553301811, 20.042650248855352, 15.903281927108765, 0.49096736311912537, 12.921603351831436, 5.1239038705825806, 8.5345143079757690,
                    4.581810310482978
                ]
            }
        },
        case3: {
            desc: '(trivial test),uplo=u, n=8, alpha=0, x={*}, y={*}, ap={*}, incx=-1, incy=-1',
            input: {
                uplo: 'u',
                n: 8,
                alpha: 0,
                x: [1, 2, 0, 4, 0, 6, 7, 8],
                incx: -1,
                y: [9, 12, 13, 14, 0, 16, 17, 18],
                incy: -1,
                ap: data.matrix_symmetric_packed_8x8.slice()
            },
            expect: {
                ap: data.matrix_symmetric_packed_8x8.slice()
            }
        },
    },
    sspr2Errors: {
        case0: {
            desc: 'uplo=x must fail',
            input: {
                uplo: 'x',
                n: 8,
                alpha: 1,
                incx: 1,
                incy: 1,
                x: [],
                y: [],
                ap: []
            }
        },
        case1: {
            desc: 'n<0 must fail',
            input: {
                uplo: 'l',
                n: -8,
                alpha: 1,
                incx: 1,
                incy: 1,
                x: [],
                y: [],
                ap: []
            }
        },
        case2: {
            desc: 'incx == 0, must fail',
            input: {
                uplo: 'l',
                n: 8,
                alpha: 1,
                incx: 0,
                incy: 1,
                x: [],
                y: [],
                ap: []
            }
        },
        case3: {
            desc: 'incy == 0, must fail',
            input: {
                uplo: 'l',
                n: 8,
                alpha: 1,
                incx: 1,
                incy: 0,
                x: [],
                y: [],
                ap: []
            }
        },
    },
    //y := alpha*A*x + beta*y,
    //unpacked/unbanded symmetrical matrix A
    ssymv: {
        //SUBROUTINE SSYMV(UPLO,N,ALPHA,A,LDA,X,INCX,BETA,Y,INCY)
        //
        case0: {

            desc: 'uplo=u, n=6, alpha=1, incy=1, lda=8, incx=1, beta=1, a={}, x={}, y={*},',
            input: {
                uplo: 'u',
                n: 6,
                alpha: 1,
                lda: 6,
                incx: 1,
                beta: 1,
                incy: 1,
                a: data.matrix_6x6_upper.slice(),
                x: [
                    -0.08252376201716412,
                    0.6060734308621007,
                    -0.8874201453170976,
                    0.10542139019376515,
                    0.3528744733184766,
                    0.5503933584550523,
                ],
                y: [
                    0.7021167106675735,
                    2.5071111484833684,
                    -1.890027143624024,
                    -0.5898127901911715,
                    -1.7145022968458246,
                    -0.4209978978166964,
                ],
            },
            expect: {
                y: [
                    -0.34473174217488856,
                    2.6551581562507569,
                    -2.9788880265441096,
                    0.77215578203476642,
                    -2.3181438495981777,
                    -0.19616499922182973
                ],
            }
        },
        case1: {
            desc: 'uplo=u, n=6, alpha=0, incy=-1, lda=6, incx=-1, beta=0.35, a={*}, x={*}, y={*},',
            input: {
                uplo: 'u',
                n: 6,
                alpha: 0,
                lda: 6,
                incx: -1,
                beta: 0.35,
                incy: -1,
                a: data.matrix_6x6_upper.slice(),
                x: [
                    -0.08252376201716412,
                    0.6060734308621007,
                    -0.8874201453170976,
                    0.10542139019376515,
                    0.3528744733184766,
                    0.5503933584550523,
                ],
                y: [
                    0.7021167106675735,
                    2.5071111484833684,
                    -1.890027143624024,
                    -0.5898127901911715,
                    -1.7145022968458246,
                    -0.4209978978166964,
                ],
            },
            expect: {
                y: [
                    0.24574085055520101,
                    0.87748886044555263,
                    -0.66150949662907621,
                    -0.20643448180071822,
                    -0.60007580688892403,
                    -0.14734925823808975
                ],
            }
        },
        case2: {
            desc: 'uplo=u, n=6, alpha=0.5, incy=-1, lda=6, incx=-1, beta=0, a={}, x={}, y={*},',
            input: {
                uplo: 'u',
                n: 6,
                alpha: 0.5,
                lda: 6,
                incx: -1,
                beta: 0,
                incy: -1,
                a: data.matrix_6x6_upper.slice(),
                x: [
                    -0.08252376201716412,
                    0.6060734308621007,
                    -0.8874201453170976,
                    0.10542139019376515,
                    0.3528744733184766,
                    0.5503933584550523,
                ],
                y: [
                    0.7021167106675735,
                    2.5071111484833684,
                    -1.890027143624024,
                    -0.5898127901911715,
                    -1.7145022968458246,
                    -0.4209978978166964,
                ],
            },
            expect: {
                y: [
                    -1.0601889945486187,
                    -0.25310583298255546,
                    0.23215355215989741,
                    0.31792263624047945,
                    -0.23418812548426216,
                    0.52659731973169610
                ],
            }
        },
        case3: {
            desc: 'uplo=l, n=6, alpha=0.5, incx=-1, beta=0, incy=-1, lda=6, a={}, x={},  y={*} ',
            input: {
                uplo: 'l',
                n: 6,
                alpha: 0.5,
                lda: 6,
                incx: -1,
                beta: 0,
                incy: -1,
                a: data.matrix_6x6_upper.slice(),
                x: [
                    -0.08252376201716412,
                    0.6060734308621007,
                    -0.8874201453170976,
                    0.10542139019376515,
                    0.3528744733184766,
                    0.5503933584550523,
                ],
                y: [
                    0.7021167106675735,
                    2.5071111484833684,
                    -1.890027143624024,
                    -0.5898127901911715,
                    -1.7145022968458246,
                    -0.4209978978166964,
                ],
            },
            expect: {
                y: [
                    -6.0665572049565242E-002,
                    -0.32925031366133339,
                    0.54652082819193026,
                    -1.9627004950369814E-004,
                    -0.18855719168536922,
                    0.28998873271818582
                ],
            }
        },
        case4: {
            desc: '(trivial)uplo=l, n=6, alpha=0, lda=6, incx=-1, beta=1, incy=-1, x={}, a={}, y={*}',
            input: {
                uplo: 'l',
                n: 6,
                alpha: 0,
                lda: 6,
                incx: -1,
                beta: 1,
                incy: -1,
                a: data.matrix_6x6_upper.slice(),
                x: [
                    -0.08252376201716412,
                    0.6060734308621007,
                    -0.8874201453170976,
                    0.10542139019376515,
                    0.3528744733184766,
                    0.5503933584550523,
                ],
                y: [
                    0.7021167106675735,
                    2.5071111484833684,
                    -1.890027143624024,
                    -0.5898127901911715,
                    -1.7145022968458246,
                    -0.4209978978166964,
                ],
            },
            expect: {
                y: [
                    0.70211672782897949,
                    2.5071110725402832,
                    -1.8900271654129028,
                    -0.58981281518936157,
                    -1.7145023345947266,
                    -0.42099788784980774
                ],
            }
        },
    },
    ssymvErrors: {
        case0: {
            desc: 'uplo=x must fail',
            input: {
                uplo: 'x',
                n: 6,
                alpha: 0.5,
                a: [],
                x: [],
                y: [],
                lda: 6,
                incx: -1,
                beta: 1,
                incy: -1
            }
        },
        case1: {
            desc: 'n<0 must fail',
            input: {
                uplo: 'l',
                n: -1,
                alpha: 0.5,
                a: [],
                x: [],
                y: [],
                lda: 6,
                incx: -1,
                beta: 1,
                incy: -1
            }
        },
        case2: {
            desc: 'lda <n must fail',
            input: {
                uplo: 'l',
                n: 7,
                alpha: 0.5,
                a: [],
                x: [],
                y: [],
                lda: 6,
                incx: -1,
                beta: 1,
                incy: -1
            }
        },
        case3: {
            desc: 'incx=0 must fail',
            input: {
                uplo: 'l',
                n: 7,
                alpha: 0.5,
                a: [],
                x: [],
                y: [],
                lda: 7,
                incx: 0,
                beta: 1,
                incy: -1
            }
        },
        case4: {
            desc: 'incx=0 must fail',
            input: {
                uplo: 'l',
                n: 7,
                alpha: 0.5,
                a: [],
                x: [],
                y: [],
                lda: 7,
                incx: 4,
                beta: 1,
                incy: 0
            }
        },

    },
    ssyr: {
        //SUBROUTINE SSYMV(UPLO,N,ALPHA,A,LDA,X,INCX,BETA,Y,INCY)
        //
        case0: {
            desc: 'uplo=u, n=6, alpha=1, lda=6, incx=1',
            input: {
                uplo: 'u',
                n: 6,
                alpha: 1,
                lda: 6,
                incx: 1,
                a: data.matrix_6x6_upper.slice(),
                x: [
                    -0.08252376201716412,
                    0.6060734308621007,
                    -0.8874201453170976,
                    0.10542139019376515,
                    0.3528744733184766,
                    0.5503933584550523,
                ]
            },
            expect: {
                a: [
                    1.0605610441013518,
                    0.0000000000000000,
                    0.0000000000000000,
                    0.0000000000000000,
                    0.0000000000000000,
                    0.0000000000000000,
                    0.14766879726298399,
                    -0.70136767056532889,
                    0.0000000000000000,
                    0.0000000000000000,
                    0.0000000000000000,
                    0.0000000000000000,
                    0.33587870086148897,
                    -1.7707429783270889,
                    0.78379093174982373,
                    0.0000000000000000,
                    0.0000000000000000,
                    0.0000000000000000,
                    -0.98270230965828498,
                    0.75326582070363690,
                    -1.0493921568733513,
                    -1.2205934273347165,
                    0.0000000000000000,
                    0.0000000000000000,
                    -0.93980124191944192,
                    0.95514417809651597,
                    -0.24463638865123194,
                    -0.28655024632806270,
                    -0.96198262484351371,
                    0.0000000000000000,
                    -0.81321072821724272,
                    -0.78614131511214680,
                    -0.93660436349163945,
                    0.52975960094123131,
                    -0.98627096329219199,
                    1.7731898758261764
                ],
            }
        },
        case1: {
            desc: 'uplo=l, n=6, alpha=1, lda=6, incx=-1',
            input: {
                uplo: 'l',
                n: 6,
                alpha: 1,
                lda: 6,
                incx: -1,
                a: data.matrix_6x6_upper.slice(),
                x: [
                    -0.08252376201716412,
                    0.6060734308621007,
                    -0.8874201453170976,
                    0.10542139019376515,
                    0.3528744733184766,
                    0.5503933584550523,
                ]
            },
            expect: {
                a: [
                    1.3566837045996749,
                    0.19421976890080117,
                    5.8023229424049916E-002,
                    -0.48843012528668339,
                    0.33357878624435955,
                    -4.5420529891131878E-002,
                    0.19768425822257996,
                    -0.94417228014746879,
                    3.7200517803483324E-002,
                    -0.31314791940818232,
                    0.21386785430119737,
                    -2.9120530650063259E-002,
                    0.26264545321464539,
                    -1.2329012155532837,
                    7.3901349410508410E-003,
                    -9.3553059373503888E-002,
                    6.3893102369438903E-002,
                    -8.6997695467432301E-003,
                    -0.97400254011154175,
                    0.68937271833419800,
                    -0.95583909749984741,
                    -0.44419263052594360,
                    -0.53784176277380524,
                    7.3233247646843580E-002,
                    -0.91068071126937866,
                    0.74127632379531860,
                    6.8511530756950378E-002,
                    -0.32375076413154602,
                    -0.71917801526137382,
                    -5.0015460959595970E-002, -0.76779019832611084, -1.1197201013565063,
                    -0.44817423820495605, 0.47173637151718140,
                    -1.1804907321929932,
                    1.4770672153278532
                ],
            },
        },
        case2: {
            desc: 'uplo=l, n=6, alpha=1, lda=6, incx=1, x, has a zero element',
            input: {
                uplo: 'l',
                n: 6,
                alpha: 1.5,
                lda: 6,
                incx: 1,
                a: data.matrix_6x6_upper.slice(),
                //x: [1, 0, 1, 0, 1, 1],
                x: [
                    -0.08252376201716412,
                    0, // 0.6060734308621007,
                    -0.8874201453170976,
                    0, // 0.10542139019376515,
                    0.3528744733184766,
                    0.5503933584550523
                ]
            },
            expect: {
                a: [
                    1.0639661298460279, 0.0000000000000000, 0.10984987147026537, 0.0000000000000000, -4.3680795975094888E-002, -6.8130794836697817E-002,
                    0.19768425822257996, -1.0686926841735840, 0.0000000000000000, 0.0000000000000000, 0.0000000000000000, 0.0000000000000000,
                    0.26264545321464539, -1.2329012155532837, 1.1775481645367787, 0.0000000000000000, -0.46972187911227348, -0.73264518793002509,
                    -0.97400254011154175, 0.68937271833419800, -0.95583909749984741, -1.2317070960998535, 0.0000000000000000, 0.0000000000000000,
                    -0.91068071126937866, 0.74127632379531860, 6.8511530756950378E-002, -0.32375076413154602, -0.89972242283045611, 0.29132965335120176,
                    -0.76779019832611084, -1.1197201013565063, -0.44817423820495605, 0.47173637151718140, -1.1804907321929932, 1.9246562918200141
                ],
            }
        },
        case3: {
            desc: 'uplo=u, n=6, alpha=1, lda=6, incx=1, x, has a zero element',
            input: {
                uplo: 'u',
                n: 6,
                alpha: 1.5,
                lda: 6,
                incx: 1,
                a: data.matrix_6x6_upper.slice(),
                //x: [1, 0, 1, 0, 1, 1],
                x: [
                    -0.08252376201716412,
                    0, // 0.6060734308621007,
                    -0.8874201453170976,
                    0, // 0.10542139019376515,
                    0.3528744733184766,
                    0.5503933584550523
                ]
            },
            expect: {
                a: [
                    1.0639661298460279, 0.0000000000000000, 0.0000000000000000, 0.0000000000000000, 0.0000000000000000, 0.0000000000000000,
                    0.19768425822257996, -1.0686926841735840, 0.0000000000000000, 0.0000000000000000, 0.0000000000000000, 0.0000000000000000,
                    0.37249532468491076, -1.2329012155532837, 1.1775481645367787, 0.0000000000000000, 0.0000000000000000, 0.0000000000000000,
                    -0.97400254011154175, 0.68937271833419800, -0.95583909749984741, -1.2317070960998535, 0.0000000000000000, 0.0000000000000000,
                    - 0.95436150724447355, 0.74127632379531860, - 0.40121034835532310, - 0.32375076413154602, - 0.89972242283045611, 0.0000000000000000,
                    - 0.83592099316280866, - 1.1197201013565063, - 1.1808194261349811, 0.47173637151718140, - 0.88916107884179141, 1.9246562918200141
                ],
            }
        },
        case4: {
            desc: 'trivial(alpha=0)',
            input: {
                uplo: 'u',
                n: 6,
                alpha: 0,
                lda: 6,
                incx: 1,
                a: data.matrix_6x6_upper.slice(),
                //x: [1, 0, 1, 0, 1, 1],
                x: [
                    -0.08252376201716412,
                    0, // 0.6060734308621007,
                    -0.8874201453170976,
                    0, // 0.10542139019376515,
                    0.3528744733184766,
                    0.5503933584550523
                ]
            },
            expect: {
                a: data.matrix_6x6_upper.slice()
            }
        },
    },
    ssyrErrors: {
        //SUBROUTINE SSYMV(UPLO,N,ALPHA,A,LDA,X,INCX,BETA,Y,INCY)
        //
        case0: {
            desc: 'uplo!="u|l",  must fail',
            input: {
                uplo: 'x',
                n: 6,
                alpha: 1,
                lda: 6,
                incx: 1,
            }
        },
        case1: {
            desc: 'n<0,  must fail',
            input: {
                uplo: 'l',
                n: -1,
                alpha: 1,
                lda: 6,
                incx: 1,
            }
        },
        case2: {
            desc: 'incx=0,  must fail',
            input: {
                uplo: 'l',
                n: 0,
                alpha: 1,
                lda: 6,
                incx: 0,
            }
        },
        case3: {
            desc: 'lda<n must fail',
            input: {
                uplo: 'l',
                n: 10,
                alpha: 1,
                lda: 6,
                incx: 2,
            }
        }
    },

    ssyr2: {
        //SSYR2  performs the symmetric rank 2 operation
        //A:= alpha * x * y ** T + alpha * y * x ** T + A,
        //UPLO,N,ALPHA,X,INCX,Y,INCY,A,LDA
        case0: {
            desc: 'uplo=u, n=6, alpha=1, lda=6, incx=1, incy=1',
            input: {
                uplo: 'u',
                n: 6,
                alpha: 1,
                incx: 1,
                incy: 1,
                lda: 6,
                a: data.matrix_6x6_upper.slice(),
                x: [
                    -0.08252376201716412,
                    0.6060734308621007,
                    -0.8874201453170976,
                    0.10542139019376515,
                    0.3528744733184766,
                    0.5503933584550523,
                ],
                y: [
                    -7.7995958197861910,
                    -0.90987740363925695,
                    -1.3999755270779133,
                    14.987896066159010,
                    6.2202929537743330,
                    11.557443037629128
                ]
            },
            expect: {
                a: [2.3410548415528245,
                    0,
                    0,
                    0,
                    0,
                    0,
                    -4.454357029167,
                    -2.171597750629876,
                    0,
                    0,
                    0,
                    0,
                    7.299695161698482,
                    -1.2739456326320604,
                    2.4810094375675433,
                    0,
                    0,
                    0,
                    -3.0331043634855632,
                    9.677217747189504,
                    -14.403987374606984,
                    1.9283826203341967,
                    0,
                    0,
                    -4.176280924891648,
                    4.190158087127983,
                    -5.945517370452567,
                    5.620847106509339,
                    3.3034621529058006,
                    0,
                    -6.014399601339204,
                    5.384148612710827,
                    -11.475019248653608,
                    9.939376538593871,
                    6.321443871329548,
                    14.1925367743503]
            }
        }, //case
        case1: {
            desc: 'uplo=l, n=6, alpha=1, lda=6, incx=-1, incy=-1',
            input: {
                uplo: 'l',
                n: 6,
                alpha: 1,
                incx: -1,
                incy: -1,
                lda: 6,
                a: data.matrix_6x6_upper.slice(),
                x: [
                    -0.08252376201716412,
                    0.6060734308621007,
                    -0.8874201453170976,
                    0.10542139019376515,
                    0.3528744733184766,
                    0.5503933584550523,
                ],
                y: [
                    -7.7995958197861910,
                    -0.90987740363925695,
                    -1.3999755270779133,
                    14.987896066159010,
                    6.2202929537743330,
                    11.557443037629128
                ]
            },
            expect: {
                a:
                    [
                        13.776029881910745,
                        7.5019345421842161,
                        9.4676397965954706,
                        -11.026844348544614,
                        6.5038685488862313,
                        -5.2466092857159197,
                        0.19768425822257996,
                        3.3212727582885009,
                        5.9445980278662063,
                        -6.0140288378936830,
                        3.4488818699418466,
                        -3.2656003734532248,
                        0.26264545321464539,
                        -1.2329012155532837,
                        3.1563660177640145,
                        -13.448147766702762,
                        8.9878451137976469,
                        -2.0591017853036462,
                        -0.97400254011154175,
                        0.68937271833419800,
                        -0.95583909749984741,
                        1.2530258182029286,
                        -4.1044462333807985E-002,
                        7.0370495029635691,
                        -0.91068071126937866,
                        0.74127632379531860,
                        6.8511530756950378E-002,
                        -0.32375076413154602,
                        -2.1894081024656344,
                        -4.6520413614686973,
                        -0.76779019832611084,
                        -1.1197201013565063,
                        -0.44817423820495605,
                        0.47173637151718140,
                        -1.1804907321929932,
                        2.7575610426505364,
                    ]

            }
        },
        case2: {
            desc: 'uplo=l, n=6, alpha=1, lda=6, incx=-1, incy=-1, both {x} and {y} have zeros',
            input: {
                uplo: 'l',
                n: 6,
                alpha: 1,
                incx: -1,
                incy: -1,
                lda: 6,
                a: data.matrix_6x6_upper.slice(),
                x: [
                    -0.08252376201716412,
                    0,
                    -0.8874201453170976,
                    0.10542139019376515,
                    0,
                    0.5503933584550523,
                ],
                y: [
                    0,
                    0,
                    -1.3999755270779133,
                    0,
                    6.2202929537743330,
                    11.557443037629128
                ]
            },
            expect: {
                a:
                    [
                        13.776029881910745,
                        3.4236078833259853,
                        1.2184016319884208,
                        -11.026844348544614,
                        0.0000000000000000,
                        -0.95376366145859492,
                        0.19768425822257996,
                        -1.0686926841735840,
                        0.65575191823477041,
                        -5.5200131871259828,
                        0.0000000000000000,
                        -0.51332199015803326,
                        0.26264545321464539,
                        -1.2329012155532837,
                        -3.7235338240861893E-003,
                        -0.14758736253159732,
                        0.0000000000000000,
                        0.0000000000000000,
                        -0.97400254011154175,
                        0.68937271833419800,
                        -0.95583909749984741,
                        1.2530258182029286,
                        0.0000000000000000,
                        0.11553124977633900,
                        -0.91068071126937866,
                        0.74127632379531860,
                        6.8511530756950378E-002,
                        -0.32375076413154602,
                        -1.0865030288696289,
                        0.0000000000000000,
                        -0.76779019832611084,
                        -1.1197201013565063,
                        -0.44817423820495605,
                        0.47173637151718140,
                        -1.1804907321929932,
                        1.4702570438385010,
                    ]

            }
        },
        case3: {
            desc: 'uplo=u, n=6, alpha=1, lda=6, incx=-1, incy=-1, both {x} and {y} have zeros',
            input: {
                uplo: 'u',
                n: 6,
                alpha: 1,
                incx: -1,
                incy: -1,
                lda: 6,
                a: data.matrix_6x6_upper.slice(),
                x: [
                    -0.08252376201716412,
                    0,
                    -0.8874201453170976,
                    0.10542139019376515,
                    0,
                    0.5503933584550523,
                ],
                y: [
                    0,
                    0,
                    -1.3999755270779133,
                    0,
                    6.2202929537743330,
                    11.557443037629128
                ]
            },
            expect: {
                a:
                    [
                        13.776029881910745,
                        0.0000000000000000,
                        0.0000000000000000,
                        0.0000000000000000,
                        0.0000000000000000,
                        0.0000000000000000,
                        3.6212921415485653,
                        -1.0686926841735840,
                        0.0000000000000000,
                        0.0000000000000000,
                        0.0000000000000000,
                        0.0000000000000000,
                        1.4810470852030662,
                        -0.57714929731851328,
                        -3.7235338240861893E-003,
                        0.0000000000000000,
                        0.0000000000000000,
                        0.0000000000000000,
                        -12.000846888656156,
                        -4.8306404687917848,
                        -1.1034264600314447,
                        1.2530258182029286,
                        0.0000000000000000,
                        0.0000000000000000,
                        -0.91068071126937866,
                        0.74127632379531860,
                        6.8511530756950378E-002,
                        -0.32375076413154602,
                        -1.0865030288696289,
                        0.0000000000000000,
                        -1.7215538597847058,
                        -1.6330420915145396,
                        -0.44817423820495605,
                        0.58726762129352039,
                        -1.1804907321929932,
                        1.4702570438385010,
                    ]

            }
        },
        case4: {
            desc: '(trivial n=0)',
            input: {
                uplo: 'u',
                n: 0,
                alpha: 1,
                incx: -1,
                incy: -1,
                lda: 6,
                a: data.matrix_6x6_upper.slice(),
                x: [
                    -0.08252376201716412,
                    0,
                    -0.8874201453170976,
                    0.10542139019376515,
                    0,
                    0.5503933584550523,
                ],
                y: [
                    0,
                    0,
                    -1.3999755270779133,
                    0,
                    6.2202929537743330,
                    11.557443037629128
                ]
            },
            expect: {
                a: data.matrix_6x6_upper.slice()
            }
        }
    }, //case
    ssyr2Errors: {
        //SUBROUTINE SSYMV(UPLO,N,ALPHA,A,LDA,X,INCX,BETA,Y,INCY)
        //
        case0: {
            desc: 'uplo!="u|l",  must fail',
            input: {
                uplo: 'x',
                n: 6,
                alpha: 1,
                incx: -1,
                incy: -1,
                lda: 6,
            },
        },
        case1: {
            desc: 'n<0,  must fail',
            input: {
                uplo: 'u',
                n: -1,
                alpha: 1,
                incx: -1,
                incy: -1,
                lda: 6,
            }
        },
        case2: {
            desc: 'incx=0,  must fail',
            input: {
                uplo: 'l',
                n: 0,
                alpha: 1,
                lda: 6,
                incx: 0,
                incy: 1,
            }
        },
        case3: {
            desc: 'incy=0,  must fail',
            input: {
                uplo: 'l',
                n: 1,
                alpha: 1,
                lda: 6,
                incx: 1,
                incy: 0
            }
        },
        case4: {
            desc: 'lda<n must fail',
            input: {
                uplo: 'l',
                n: 10,
                alpha: 1,
                lda: 6,
                incx: 1,
                incy: 1
            }
        }
    },
    dtbmv: {
        //
        // x := A*x,   or   x := A**T*x,
        //
        //UPLO,TRANS,DIAG,N,K,A,LDA,X,INCX
        case0: {
            desc: 'uplo="u", trans="n", diag="n", n=6, k=5, lda=6, incx=1, x{},a{}',
            input: {
                uplo: 'u',
                trans: 'n',
                diag: 'n',
                n: 6,
                k: 5,
                lda: 6,
                incx: 1,
                a: data.matrix_6x6_upper.slice(),
                x: [
                    -0.08252376201716412,
                    0.6060734308621007,
                    0,
                    0.10542139019376515,
                    0.3528744733184766,
                    0.5503933584550523,
                ]
            },
            expect: {
                x: [
                    -0.26177499408134652,
                    -0.72195878849390160,
                    -0.36091550221494995,
                    -0.12375864110929058,
                    -0.64973424043893147,
                    0.80921968938611144,
                ]
            }
        }, //case
        case1: {
            desc: 'uplo="u", trans="n", diag="u", n=6, k=5, lda=6, incx=1, x{},a{}',
            input: {
                uplo: 'u',
                trans: 'n',
                diag: 'u',
                n: 6,
                k: 5,
                lda: 6,
                incx: 1,
                a: data.matrix_6x6_upper.slice(),
                x: [
                    -0.08252376201716412,
                    0.6060734308621007,
                    0,
                    0.10542139019376515,
                    0.3528744733184766,
                    0.5503933584550523,
                ]
            },
            expect: {
                x: [
                    -0.34429875726112558,
                    -0.11588534937265527,
                    -0.36091550221494995,
                    -1.8337254450145224E-002,
                    -0.29685975280045795,
                    0.55039334297180176,
                ]
            }
        },
        case2: {
            desc: 'uplo="l", trans="n", diag="n", n=6, k=5, lda=6, incx=1, x{},a{}',
            input: {
                uplo: 'l',
                trans: 'n',
                diag: 'n',
                n: 6,
                k: 5,
                lda: 6,
                incx: 1,
                a: data.matrix_6x6_upper.slice(),
                x: [
                    -0.08252376201716412,
                    0.6060734308621007,
                    0,
                    0.10542139019376515,
                    0.3528744733184766,
                    0.5503933584550523,
                ]
            },
            expect: {
                x: [
                    -8.6959487461918172E-002,
                    0.11981117824109155,
                    -0.64770625046079999,
                    -0.10268069838808858,
                    -0.24868136149964704,
                    -0.26177499408134652,
                ]
            }
        }, //case
        case3: {
            desc: 'uplo="l", trans="n", diag="u", n=6, k=5, lda=6, incx=1, x{},a{}',
            input: {
                uplo: 'l',
                trans: 'n',
                diag: 'u',
                n: 6,
                k: 5,
                lda: 6,
                incx: 1,
                a: data.matrix_6x6_upper.slice(),
                x: [
                    -0.08252376201716412,
                    0.6060734308621007,
                    0,
                    0.10542139019376515,
                    0.3528744733184766,
                    0.5503933584550523,
                ]
            },
            expect: {
                x: [
                    -8.2523763179779053E-002,
                    0.60607343912124634,
                    -0.64770625046079999,
                    0.10542138665914536,
                    0.42554911553024910,
                    0.71120496284814605,
                ]
            }
        },
        case4: {
            desc: 'uplo="u", trans="t", diag="n", n=6, k=5, lda=6, incx=1, x{},a{}',
            input: {
                uplo: 'u',
                trans: 't',
                diag: 'n',
                n: 6,
                k: 5,
                lda: 6,
                incx: -1,
                a: data.matrix_6x6_upper.slice(),
                x: [
                    -0.08252376201716412,
                    0.6060734308621007,
                    0,
                    0.10542139019376515,
                    0.3528744733184766,
                    0.5503933584550523,
                ]
            },
            expect: {
                x: [
                    -1.7017496426889362,
                    0.39803927074603407,
                    -0.96072548667299884,
                    0.0000000000000000,
                    0.0000000000000000,
                    0.0000000000000000,
                ]
            }
        },  //case
        case5: {
            desc: 'uplo="u", trans="t", diag="n", n=6, k=5, lda=6, incx=1, x{},a{}',
            input: {
                uplo: 'u',
                trans: 't',
                diag: 'u',
                n: 6,
                k: 5,
                lda: 6,
                incx: -1,
                a: data.matrix_6x6_upper.slice(),
                x: [
                    -0.08252376201716412,
                    0.6060734308621007,
                    0,
                    0.10542139019376515,
                    0.3528744733184766,
                    0.5503933584550523,
                ]
            },
            expect: {
                x: [
                    -1.6629422617695848,
                    1.0041127098672804,
                    -0.96072548667299884,
                    0.10542138665914536,
                    0.35287448763847351,
                    0.55039334297180176,
                ]
            }
        },
        case6: {
            desc: 'uplo="l", trans="t", diag="n", n=6, k=5, lda=6, incx=-1, x{},a{}',
            input: {
                uplo: 'l',
                trans: 't',
                diag: 'n',
                n: 6,
                k: 5,
                lda: 6,
                incx: -1,
                a: data.matrix_6x6_upper.slice(),
                x: [
                    -0.08252376201716412,
                    0.6060734308621007,
                    0,
                    0.10542139019376515,
                    0.3528744733184766,
                    0.5503933584550523,
                ]
            },
            expect: {
                x: [
                    6.3360936498419562E-002,
                    -0.61311230241607717,
                    0.49668993355722080,
                    2.5431712927159400E-002,
                    -4.2905333343578711E-002,
                    0.57997746543637163,
                ]
            }
        },
        case7: {
            desc: 'uplo="l", trans="t", diag="n", n=6, k=5, lda=6, incx=-1, x{},a{}',
            input: {
                uplo: 'l',
                trans: 't',
                diag: 'u',
                n: 6,
                k: 5,
                lda: 6,
                incx: -1,
                a: data.matrix_6x6_upper.slice(),
                x: [
                    -0.08252376201716412,
                    0.6060734308621007,
                    0,
                    0.10542139019376515,
                    0.3528744733184766,
                    0.5503933584550523,
                ]
            },
            expect: {
                x: [
                    -8.2523763179779053E-002,
                    0.54490052732558425,
                    0.49668993355722080,
                    0.10316465170869715,
                    0.24021142296041020,
                    0.55039334297180176,
                ]
            }
        },
        case8: {
            desc: 'trivial(n=0)',
            input: {
                uplo: 'l',
                trans: 't',
                diag: 'u',
                n: 0,
                k: 5,
                lda: 6,
                incx: -1,
                a: data.matrix_6x6_upper.slice(),
                x: [
                    -0.08252376201716412,
                    0.6060734308621007,
                    0,
                    0.10542139019376515,
                    0.3528744733184766,
                    0.5503933584550523,
                ]
            },
            expect: {
                x: [
                    -0.08252376201716412,
                    0.6060734308621007,
                    0,
                    0.10542139019376515,
                    0.3528744733184766,
                    0.5503933584550523,
                ]
            }
        },
    },
    dtbmvErrors: {
        //
        // x := A*x,   or   x := A**T*x,
        //
        //UPLO,TRANS,DIAG,N,K,A,LDA,X,INCX
        case0: {
            desc: 'uplo!=="u|l" should fail',
            input: {
                uplo: 'x',
                trans: 'n',
                diag: 'n',
                n: 6,
                k: 5,
                lda: 6,
                incx: 1
            }
        }, //case
        case1: {
            desc: 'trans!=="n|t|c" should fail',
            input: {
                uplo: 'l',
                trans: 'x',
                diag: 'n',
                n: 6,
                k: 5,
                lda: 6,
                incx: 1
            }
        }, //case
        case2: {
            desc: 'diag!=="n|u" should fail',
            input: {
                uplo: 'l',
                trans: 't',
                diag: 'x',
                n: 6,
                k: 5,
                lda: 6,
                incx: 1
            }
        }, //case
        case3: {
            desc: 'lda<k+1 should fail',
            input: {
                uplo: 'l',
                trans: 't',
                diag: 'n',
                n: 6,
                k: 5,
                lda: 4,
                incx: 1
            }
        }, //case
        case4: {
            desc: 'lda<k+1 should fail',
            input: {
                uplo: 'l',
                trans: 't',
                diag: 'n',
                n: 6,
                k: 5,
                lda: 6,
                incx: 0
            }
        }, //case
        case5: {
            desc: 'k<0 should fail',
            input: {
                uplo: 'l',
                trans: 't',
                diag: 'n',
                n: 6,
                k: -1,
                lda: 6,
                incx: 1
            }
        }, //case
        case6: {
            desc: 'n<0 should fail',
            input: {
                uplo: 'l',
                trans: 't',
                diag: 'n',
                n: -6,
                k: 3,
                lda: 6,
                incx: 1
            }
        }, //case
    }//,
}
