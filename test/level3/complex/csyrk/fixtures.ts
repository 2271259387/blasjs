/* This is a conversion from BLAS to Typescript/Javascript
Copyright (C) 2018  Jacob K.F. Bogers  info@mail.jacob-bogers.com

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

import { complex } from '../../../test-helpers';

import { matrix_mxn } from '../../../matrices';

export const fixture = {
    //
    csyrk: {
        case0: {
            desc: '(trivial) alpha = (0,0), beta = (1,0)',
            input: {
                uplo: 'u',
                trans: 'n',
                n: 4,
                k: 6,
                alpha: complex(0, 0),
                beta: complex(1, 0),
                lda: 6,
                ldc: 6,
                a: (() => {
                    const m = matrix_mxn(6, 6); //
                    //m.r[0] = 0;
                    //m.i[0] = 0;
                    return m;
                })(), //
                c: (() => {
                    const m = matrix_mxn(6, 6); //
                    //m.r[0] = 0;
                    //m.i[0] = 0;
                    return m;
                })(),
            },
            expect: {
                c: matrix_mxn(6, 6).toArr(),
            },
        },
        case1: {
            desc: '(near trivial) uplo="u",alpha = (0,0), beta = (0.2,-.3)',
            input: {
                cmd: '',
                uplo: 'u',
                trans: 'n',
                n: 4,
                k: 6,
                alpha: complex(0, 0),
                beta: complex(0.2, -0.3),
                lda: 6,
                ldc: 6,
                a: (() => {
                    const m = matrix_mxn(6, 6); //
                    //m.r[0] = 0;
                    //m.i[0] = 0;
                    return m;
                })(), //
                c: (() => {
                    const m = matrix_mxn(6, 6); //
                    //m.r[0] = 0;
                    //m.i[0] = 0;
                    return m;
                })(),
            },
            expect: {
                c: [
                    complex(0.55023897657273935, -0.18045420664446521),
                    complex(-0.32623335719108582, -0.42951309680938721),
                    complex(1.3297992944717407, 1.2383041381835938),
                    complex(1.272429347038269, -0.2793462872505188),
                    complex(0.41464143991470337, 1.7579030990600586),
                    complex(-1.5399500131607056, 0.56074607372283936),
                    complex(-0.32154861014992875, 0.18801333088125061),
                    complex(-0.30855708605913401, -7.7992524663095253e-2),
                    complex(-5.7671726681292057e-3, -1.1665705442428589),
                    complex(2.4046533107757568, -1.0655906200408936),
                    complex(0.76359343528747559, -1.5637820959091187),
                    complex(-0.79900926351547241, 1.1565370559692383),
                    complex(2.0082730592880793e-2, 0.51070654816232697),
                    complex(-0.12609092652433018, 4.1372740061633717e-2),
                    complex(1.999818910758e-2, 0.14299200911223231),
                    complex(-0.41151082515716553, -0.37670272588729858),
                    complex(0.25222346186637878, 2.4413645267486572),
                    complex(-0.89192110300064087, -0.79533910751342773),
                    complex(7.0673420179407032e-2, -0.14168049334767674),
                    complex(-0.17246529530576815, 0.42128981709568247),
                    complex(0.14061941280575163, 0.19092902545724755),
                    complex(2.3692080935542759e-2, -0.14774340296449107),
                    complex(0.13333636522293091, -2.223900318145752),
                    complex(0.80418950319290161, -1.2636144161224365),
                    complex(-5.7106774300336838e-2, 0.35872888565063477),
                    complex(0.50360798835754395, -1.1045478284358978e-2),
                    complex(1.0857694149017334, -0.94064915180206299),
                    complex(-0.69095385074615479, -0.11582532525062561),
                    complex(-1.2845993041992188, -0.81496870517730713),
                    complex(4.6726170927286148e-2, 0.24226348102092743),
                    complex(-0.23570655286312103, -1.4250984191894531),
                    complex(-0.54288828372955322, 0.36594113707542419),
                    complex(-0.43331032991409302, 0.24841265380382538),
                    complex(-0.64947164058685303, 6.5288178622722626e-2),
                    complex(0.72675073146820068, 1.9156390801072121e-2),
                    complex(1.151911735534668, 0.25733837485313416),
                ],
            },
        },
        case2: {
            desc: '(near trivial) uplo="l",alpha = (0,0), beta = (0.2,-.3)',
            input: {
                cmd: '',
                uplo: 'l',
                trans: 'n',
                n: 4,
                k: 6,
                alpha: complex(0, 0),
                beta: complex(0.2, -0.3),
                lda: 6,
                ldc: 6,
                a: (() => {
                    const m = matrix_mxn(6, 6); //
                    //m.r[0] = 0;
                    //m.i[0] = 0;
                    return m;
                })(), //
                c: (() => {
                    const m = matrix_mxn(6, 6); //
                    //m.r[0] = 0;
                    //m.i[0] = 0;
                    return m;
                })(),
            },
            expect: {
                c: [
                    complex(0.55023897657273935, -0.18045420664446521),
                    complex(-0.19410060657347961, 1.1967390404404199e-2),
                    complex(0.63745111907427265, -0.15127897286681247),
                    complex(0.17068198369456589, -0.43759807756264113),
                    complex(0.41464143991470337, 1.7579030990600586),
                    complex(-1.5399500131607056, 0.56074607372283936),
                    complex(-0.92856705188751221, -0.4527839720249176),
                    complex(-0.30855708605913401, -7.7992524663095253e-2),
                    complex(-0.35112461173027559, -0.2315839604560341),
                    complex(0.16125347060647854, -0.93451414908231456),
                    complex(0.76359343528747559, -1.5637820959091187),
                    complex(-0.79900926351547241, 1.1565370559692383),
                    complex(-1.147657036781311, 0.83204710483551025),
                    complex(-0.28946158289909363, -0.22732868790626526),
                    complex(1.999818910758e-2, 0.14299200911223231),
                    complex(-0.19531298851466694, 4.8112706152619644e-2),
                    complex(0.25222346186637878, 2.4413645267486572),
                    complex(-0.89192110300064087, -0.79533910751342773),
                    complex(0.43568331003189087, -5.4877474904060364e-2),
                    complex(-1.2375384569168091, 0.25014132261276245),
                    complex(-0.22426788508892059, 0.61824327707290649),
                    complex(2.3692080935542759e-2, -0.14774340296449107),
                    complex(0.13333636522293091, -2.223900318145752),
                    complex(0.80418950319290161, -1.2636144161224365),
                    complex(-5.7106774300336838e-2, 0.35872888565063477),
                    complex(0.50360798835754395, -1.1045478284358978e-2),
                    complex(1.0857694149017334, -0.94064915180206299),
                    complex(-0.69095385074615479, -0.11582532525062561),
                    complex(-1.2845993041992188, -0.81496870517730713),
                    complex(4.6726170927286148e-2, 0.24226348102092743),
                    complex(-0.23570655286312103, -1.4250984191894531),
                    complex(-0.54288828372955322, 0.36594113707542419),
                    complex(-0.43331032991409302, 0.24841265380382538),
                    complex(-0.64947164058685303, 6.5288178622722626e-2),
                    complex(0.72675073146820068, 1.9156390801072121e-2),
                    complex(1.151911735534668, 0.25733837485313416),
                ],
            },
        },
        case3: {
            desc: '(near trivial) alpha = (0,0), beta = (0,0)',
            input: {
                cmd: '',
                uplo: 'l',
                trans: 'n',
                n: 4,
                k: 6,
                alpha: complex(0, 0),
                beta: complex(0, 0),
                lda: 6,
                ldc: 6,
                a: (() => {
                    const m = matrix_mxn(6, 6); //
                    //m.r[0] = 0;
                    //m.i[0] = 0;
                    return m;
                })(), //
                c: (() => {
                    const m = matrix_mxn(6, 6); //
                    //m.r[0] = 0;
                    //m.i[0] = 0;
                    return m;
                })(),
            },
            expect: {
                c: [
                    complex(0.0, 0.0),
                    complex(0.0, 0.0),
                    complex(0.0, 0.0),
                    complex(0.0, 0.0),
                    complex(0.41464143991470337, 1.7579030990600586),
                    complex(-1.5399500131607056, 0.56074607372283936),
                    complex(-0.92856705188751221, -0.4527839720249176),
                    complex(0.0, 0.0),
                    complex(0.0, 0.0),
                    complex(0.0, 0.0),
                    complex(0.76359343528747559, -1.5637820959091187),
                    complex(-0.79900926351547241, 1.1565370559692383),
                    complex(-1.147657036781311, 0.83204710483551025),
                    complex(-0.28946158289909363, -0.22732868790626526),
                    complex(0.0, 0.0),
                    complex(0.0, 0.0),
                    complex(0.25222346186637878, 2.4413645267486572),
                    complex(-0.89192110300064087, -0.79533910751342773),
                    complex(0.43568331003189087, -5.4877474904060364e-2),
                    complex(-1.2375384569168091, 0.25014132261276245),
                    complex(-0.22426788508892059, 0.61824327707290649),
                    complex(0.0, 0.0),
                    complex(0.13333636522293091, -2.223900318145752),
                    complex(0.80418950319290161, -1.2636144161224365),
                    complex(-5.7106774300336838e-2, 0.35872888565063477),
                    complex(0.50360798835754395, -1.1045478284358978e-2),
                    complex(1.0857694149017334, -0.94064915180206299),
                    complex(-0.69095385074615479, -0.11582532525062561),
                    complex(-1.2845993041992188, -0.81496870517730713),
                    complex(4.6726170927286148e-2, 0.24226348102092743),
                    complex(-0.23570655286312103, -1.4250984191894531),
                    complex(-0.54288828372955322, 0.36594113707542419),
                    complex(-0.43331032991409302, 0.24841265380382538),
                    complex(-0.64947164058685303, 6.5288178622722626e-2),
                    complex(0.72675073146820068, 1.9156390801072121e-2),
                    complex(1.151911735534668, 0.25733837485313416),
                ],
            },
        },
        case4: {
            desc: 'trans="n", uplo="u", alpha = (0.2,0.8), beta=(0.2,-0.3)',
            input: {
                cmd: '',
                uplo: 'u',
                trans: 'n',
                n: 4,
                k: 6,
                alpha: complex(0.2, 0.8),
                beta: complex(0.2, -0.3),
                lda: 6,
                ldc: 6,
                a: (() => {
                    const m = matrix_mxn(6, 6); //
                    const xy = m.coord(1)(1);
                    m.r[xy] = 0;
                    m.i && (m.i[xy] = 0);
                    return m;
                })(), //
                c: (() => {
                    const m = matrix_mxn(6, 6); //
                    //m.r[0] = 0;
                    //m.i[0] = 0;
                    return m;
                })(),
            },
            expect: {
                c: [
                    complex(0.81258069861096716, -0.78317760511780088),
                    complex(-0.32623335719108582, -0.42951309680938721),
                    complex(1.3297992944717407, 1.2383041381835938),
                    complex(1.272429347038269, -0.2793462872505188),
                    complex(0.41464143991470337, 1.7579030990600586),
                    complex(-1.5399500131607056, 0.56074607372283936),
                    complex(-1.7954095980537197, 0.99635550854288524),
                    complex(3.8044187016830988e-2, 0.88244242913566751),
                    complex(-5.7671726681292057e-3, -1.1665705442428589),
                    complex(2.4046533107757568, -1.0655906200408936),
                    complex(0.76359343528747559, -1.5637820959091187),
                    complex(-0.79900926351547241, 1.1565370559692383),
                    complex(-1.3787696856957568, 1.0872896859381984),
                    complex(1.6785876585678317, -0.34191907766352081),
                    complex(-0.6736740740793955, -0.54973079038592654),
                    complex(-0.41151082515716553, -0.37670272588729858),
                    complex(0.25222346186637878, 2.4413645267486572),
                    complex(-0.89192110300064087, -0.79533910751342773),
                    complex(-0.66973236653820745, -1.1870133923122208),
                    complex(0.88351377256481423, -2.0028441866578488),
                    complex(1.0151927979751547, 0.33994804861654909),
                    complex(5.9301227490237896, 4.5037526499313945),
                    complex(0.13333636522293091, -2.223900318145752),
                    complex(0.80418950319290161, -1.2636144161224365),
                    complex(-5.7106774300336838e-2, 0.35872888565063477),
                    complex(0.50360798835754395, -1.1045478284358978e-2),
                    complex(1.0857694149017334, -0.94064915180206299),
                    complex(-0.69095385074615479, -0.11582532525062561),
                    complex(-1.2845993041992188, -0.81496870517730713),
                    complex(4.6726170927286148e-2, 0.24226348102092743),
                    complex(-0.23570655286312103, -1.4250984191894531),
                    complex(-0.54288828372955322, 0.36594113707542419),
                    complex(-0.43331032991409302, 0.24841265380382538),
                    complex(-0.64947164058685303, 6.5288178622722626e-2),
                    complex(0.72675073146820068, 1.9156390801072121e-2),
                    complex(1.151911735534668, 0.25733837485313416),
                ],
            },
        },
        case5: {
            desc: 'trans="n", uplo="l", alpha = (0.2,0.8), beta=(0,0)',
            input: {
                cmd: '',
                uplo: 'l',
                trans: 'n',
                n: 4,
                k: 6,
                alpha: complex(0.2, 0.8),
                beta: complex(0, 0),
                lda: 6,
                ldc: 6,
                a: (() => {
                    const m = matrix_mxn(6, 6); //
                    m.r[0] = 0;
                    m.i && (m.i[0] = 0);
                    return m;
                })(), //
                c: (() => {
                    const m = matrix_mxn(6, 6); //
                    //m.r[0] = 0;
                    //m.i[0] = 0;
                    return m;
                })(),
            },
            expect: {
                c: [
                    complex(0.26234172203822781, -0.60272339847333567),
                    complex(-1.4738609879037909, 0.80834217766163474),
                    complex(-1.3988524162886375, 0.57658313777587145),
                    complex(-0.7404057867176147, -1.0453328989645438),
                    complex(0.41464143991470337, 1.7579030990600586),
                    complex(-1.5399500131607056, 0.56074607372283936),
                    complex(-0.92856705188751221, -0.4527839720249176),
                    complex(0.34660127307596467, 0.96043495379876276),
                    complex(1.8046785850921616, -0.38329181772515458),
                    complex(1.0559790678705823, -2.4241340037535308),
                    complex(0.76359343528747559, -1.5637820959091187),
                    complex(-0.79900926351547241, 1.1565370559692383),
                    complex(-1.147657036781311, 0.83204710483551025),
                    complex(-0.28946158289909363, -0.22732868790626526),
                    complex(-0.6936722631869755, -0.69272279949815885),
                    complex(0.87457338516940331, 0.14901902315930199),
                    complex(0.25222346186637878, 2.4413645267486572),
                    complex(-0.89192110300064087, -0.79533910751342773),
                    complex(0.43568331003189087, -5.4877474904060364e-2),
                    complex(-1.2375384569168091, 0.25014132261276245),
                    complex(-0.22426788508892059, 0.61824327707290649),
                    complex(5.9064306680882463, 4.6514960528958849),
                    complex(0.13333636522293091, -2.223900318145752),
                    complex(0.80418950319290161, -1.2636144161224365),
                    complex(-5.7106774300336838e-2, 0.35872888565063477),
                    complex(0.50360798835754395, -1.1045478284358978e-2),
                    complex(1.0857694149017334, -0.94064915180206299),
                    complex(-0.69095385074615479, -0.11582532525062561),
                    complex(-1.2845993041992188, -0.81496870517730713),
                    complex(4.6726170927286148e-2, 0.24226348102092743),
                    complex(-0.23570655286312103, -1.4250984191894531),
                    complex(-0.54288828372955322, 0.36594113707542419),
                    complex(-0.43331032991409302, 0.24841265380382538),
                    complex(-0.64947164058685303, 6.5288178622722626e-2),
                    complex(0.72675073146820068, 1.9156390801072121e-2),
                    complex(1.151911735534668, 0.25733837485313416),
                ],
            },
        },
        case6: {
            desc: 'trans="n", uplo="l", alpha = (0.2,0.8), beta=(1,0)',
            input: {
                cmd: '',
                uplo: 'l',
                trans: 'n',
                n: 4,
                k: 6,
                alpha: complex(0.2, 0.8),
                beta: complex(1, 0),
                lda: 6,
                ldc: 6,
                a: (() => {
                    const m = matrix_mxn(6, 6); //
                    m.r[0] = 0;
                    m.i && (m.i[0] = 0);
                    return m;
                })(), //
                c: (() => {
                    const m = matrix_mxn(6, 6); //
                    //m.r[0] = 0;
                    //m.i[0] = 0;
                    return m;
                })(),
            },
            expect: {
                c: [
                    complex(1.5252959571151317, 0.38943698141329164),
                    complex(-1.8000943450948768, 0.37882908085224742),
                    complex(-6.905312181689699e-2, 1.8148872759594652),
                    complex(0.53202356032065434, -1.3246791862150626),
                    complex(0.41464143991470337, 1.7579030990600586),
                    complex(-1.5399500131607056, 0.56074607372283936),
                    complex(-0.92856705188751221, -0.4527839720249176),
                    complex(5.1880831972983432e-2, 0.12839166366051821),
                    complex(1.7989114124240324, -1.5498623619680132),
                    complex(3.4606323786463382, -3.4897246237944244),
                    complex(0.76359343528747559, -1.5637820959091187),
                    complex(-0.79900926351547241, 1.1565370559692383),
                    complex(-1.147657036781311, 0.83204710483551025),
                    complex(-0.28946158289909363, -0.22732868790626526),
                    complex(-0.99288737134317973, -0.42658543797166953),
                    complex(0.46306256001223778, -0.22768370272799654),
                    complex(0.25222346186637878, 2.4413645267486572),
                    complex(-0.89192110300064087, -0.79533910751342773),
                    complex(0.43568331003189087, -5.4877474904060364e-2),
                    complex(-1.2375384569168091, 0.25014132261276245),
                    complex(-0.22426788508892059, 0.61824327707290649),
                    complex(6.2838263277733812, 4.4788725526679567),
                    complex(0.13333636522293091, -2.223900318145752),
                    complex(0.80418950319290161, -1.2636144161224365),
                    complex(-5.7106774300336838e-2, 0.35872888565063477),
                    complex(0.50360798835754395, -1.1045478284358978e-2),
                    complex(1.0857694149017334, -0.94064915180206299),
                    complex(-0.69095385074615479, -0.11582532525062561),
                    complex(-1.2845993041992188, -0.81496870517730713),
                    complex(4.6726170927286148e-2, 0.24226348102092743),
                    complex(-0.23570655286312103, -1.4250984191894531),
                    complex(-0.54288828372955322, 0.36594113707542419),
                    complex(-0.43331032991409302, 0.24841265380382538),
                    complex(-0.64947164058685303, 6.5288178622722626e-2),
                    complex(0.72675073146820068, 1.9156390801072121e-2),
                    complex(1.151911735534668, 0.25733837485313416),
                ],
            },
        },
        case7: {
            desc: 'trans="t", uplo="u", alpha=(0.2,0.8), beta=(-.3,.7)',
            input: {
                cmd: '',
                uplo: 'u',
                trans: 't',
                n: 4,
                k: 6,
                alpha: complex(0.2, 0.8),
                beta: complex(-0.3, 0.7),
                lda: 6,
                ldc: 6,
                a: (() => {
                    const m = matrix_mxn(6, 6); //
                    m.r[0] = 0;
                    m.i && (m.i[0] = 0);
                    return m;
                })(), //
                c: (() => {
                    const m = matrix_mxn(6, 6); //
                    //m.r[0] = 0;
                    //m.i[0] = 0;
                    return m;
                })(),
            },
            expect: {
                c: [
                    complex(-2.9808603488303271, 1.7744564226713),
                    complex(-0.32623335719108582, -0.42951309680938721),
                    complex(1.3297992944717407, 1.2383041381835938),
                    complex(1.272429347038269, -0.2793462872505188),
                    complex(0.41464143991470337, 1.7579030990600586),
                    complex(-1.5399500131607056, 0.56074607372283936),
                    complex(5.8911118832052018, 4.6094131151925977),
                    complex(7.2391723333828963, -0.93891226686099127),
                    complex(-5.7671726681292057e-3, -1.1665705442428589),
                    complex(2.4046533107757568, -1.0655906200408936),
                    complex(0.76359343528747559, -1.5637820959091187),
                    complex(-0.79900926351547241, 1.1565370559692383),
                    complex(-2.5818170710891248, -3.6351018749077326),
                    complex(0.61947340072428903, 4.7894685304655704),
                    complex(-1.9209481658981211, -4.1092184098735594),
                    complex(-0.41151082515716553, -0.37670272588729858),
                    complex(0.25222346186637878, 2.4413645267486572),
                    complex(-0.89192110300064087, -0.79533910751342773),
                    complex(-1.3321782148965793, 3.4484763403003704),
                    complex(-0.22414453871646978, -1.6586121570342662),
                    complex(-0.14527678397845112, 2.4786080350511233),
                    complex(2.0792833234907668, -3.9772406742098481),
                    complex(0.13333636522293091, -2.223900318145752),
                    complex(0.80418950319290161, -1.2636144161224365),
                    complex(-5.7106774300336838e-2, 0.35872888565063477),
                    complex(0.50360798835754395, -1.1045478284358978e-2),
                    complex(1.0857694149017334, -0.94064915180206299),
                    complex(-0.69095385074615479, -0.11582532525062561),
                    complex(-1.2845993041992188, -0.81496870517730713),
                    complex(4.6726170927286148e-2, 0.24226348102092743),
                    complex(-0.23570655286312103, -1.4250984191894531),
                    complex(-0.54288828372955322, 0.36594113707542419),
                    complex(-0.43331032991409302, 0.24841265380382538),
                    complex(-0.64947164058685303, 6.5288178622722626e-2),
                    complex(0.72675073146820068, 1.9156390801072121e-2),
                    complex(1.151911735534668, 0.25733837485313416),
                ],
            },
        },
        case8: {
            desc: 'trans="t", uplo="l", alpha=(0.2,0.8), beta=(0,0)',
            input: {
                cmd: '',
                uplo: 'l',
                trans: 't',
                n: 4,
                k: 6,
                alpha: complex(0.2, 0.8),
                beta: complex(0, 0),
                lda: 6,
                ldc: 6,
                a: (() => {
                    const m = matrix_mxn(6, 6); //
                    m.r[0] = 0;
                    m.i && (m.i[0] = 0);
                    return m;
                })(), //
                c: (() => {
                    const m = matrix_mxn(6, 6); //
                    //m.r[0] = 0;
                    //m.i[0] = 0;
                    return m;
                })(),
            },
            expect: {
                c: [
                    complex(-1.9074618091585025, 1.1880365989665163),
                    complex(5.2955929815497296, 5.1235748434393935),
                    complex(-2.3436812323385734, -2.5821278214725254),
                    complex(-1.239887448471914, 3.127034785346388),
                    complex(0.41464143991470337, 1.7579030990600586),
                    complex(-1.5399500131607056, 0.56074607372283936),
                    complex(-0.92856705188751221, -0.4527839720249176),
                    complex(6.5683259043606181, -0.98222095856244795),
                    complex(0.37350484357949343, 4.9238930259624363),
                    complex(-0.42030716769710375, -0.71729285217936234),
                    complex(0.76359343528747559, -1.5637820959091187),
                    complex(-0.79900926351547241, 1.1565370559692383),
                    complex(-1.147657036781311, 0.83204710483551025),
                    complex(-0.28946158289909363, -0.22732868790626526),
                    complex(-1.8244165520159665, -3.8199266261005871),
                    complex(0.22021313440239154, 2.8210685424317923),
                    complex(0.25222346186637878, 2.4413645267486572),
                    complex(-0.89192110300064087, -0.79533910751342773),
                    complex(0.43568331003189087, -5.4877474904060364e-2),
                    complex(-1.2375384569168091, 0.25014132261276245),
                    complex(-0.22426788508892059, 0.61824327707290649),
                    complex(2.0716655777934969, -4.2932046836167466),
                    complex(0.13333636522293091, -2.223900318145752),
                    complex(0.80418950319290161, -1.2636144161224365),
                    complex(-5.7106774300336838e-2, 0.35872888565063477),
                    complex(0.50360798835754395, -1.1045478284358978e-2),
                    complex(1.0857694149017334, -0.94064915180206299),
                    complex(-0.69095385074615479, -0.11582532525062561),
                    complex(-1.2845993041992188, -0.81496870517730713),
                    complex(4.6726170927286148e-2, 0.24226348102092743),
                    complex(-0.23570655286312103, -1.4250984191894531),
                    complex(-0.54288828372955322, 0.36594113707542419),
                    complex(-0.43331032991409302, 0.24841265380382538),
                    complex(-0.64947164058685303, 6.5288178622722626e-2),
                    complex(0.72675073146820068, 1.9156390801072121e-2),
                    complex(1.151911735534668, 0.25733837485313416),
                ],
            },
        },
    },
    csyrkErrors: {
        case0: {
            desc: 'a has no imaginary part',
            input: {
                uplo: 'u',
                trans: 'n',
                n: 4,
                k: 6,
                alpha: complex(0, 0),
                beta: complex(1, 0),
                lda: 6,
                ldc: 6,
                a: [0],
                c: [complex(0, 0)],
            },
        },
        case1: {
            desc: 'c has no imaginary part',
            input: {
                uplo: 'u',
                trans: 'n',
                n: 4,
                k: 6,
                alpha: complex(0, 0),
                beta: complex(1, 0),
                lda: 6,
                ldc: 6,
                a: [complex(0, 0)],
                c: [0],
            },
        },
        case2: {
            desc: 'uplo != "ul"',
            input: {
                uplo: 'x',
                trans: 'n',
                n: 4,
                k: 6,
                alpha: complex(0, 0),
                beta: complex(1, 0),
                lda: 6,
                ldc: 6,
                a: [complex(0, 0)],
                c: [complex(0, 0)],
            },
        },
        case3: {
            desc: 'trans!="tn"',
            input: {
                uplo: 'u',
                trans: 'x',
                n: 4,
                k: 6,
                alpha: complex(0, 0),
                beta: complex(1, 0),
                lda: 6,
                ldc: 6,
                a: [complex(0, 0)],
                c: [complex(0, 0)],
            },
        },
        case4: {
            desc: 'n<0',
            input: {
                uplo: 'u',
                trans: 't',
                n: -4,
                k: 6,
                alpha: complex(0, 0),
                beta: complex(1, 0),
                lda: 6,
                ldc: 6,
                a: [complex(0, 0)],
                c: [complex(0, 0)],
            },
        },
        case5: {
            desc: 'k<0',
            input: {
                uplo: 'u',
                trans: 't',
                n: 4,
                k: -6,
                alpha: complex(0, 0),
                beta: complex(1, 0),
                lda: 6,
                ldc: 6,
                a: [complex(0, 0)],
                c: [complex(0, 0)],
            },
        },
        case6: {
            desc: 'lda < max(1, nrowA=n if tr="n")',
            input: {
                uplo: 'u',
                trans: 't',
                n: 4,
                k: 6,
                alpha: complex(0, 0),
                beta: complex(1, 0),
                lda: 3,
                ldc: 6,
                a: [complex(0, 0)],
                c: [complex(0, 0)],
            },
        },
        case7: {
            desc: 'ldc < n)',
            input: {
                uplo: 'u',
                trans: 'n',
                n: 4,
                k: 6,
                alpha: complex(0, 0),
                beta: complex(1, 0),
                lda: 6,
                ldc: 3,
                a: [complex(0, 0)],
                c: [complex(0, 0)],
            },
        },
    },
};
