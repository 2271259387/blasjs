import {
    complex,
    fortranArrComplex64 as arr64,
    fortranMatrixComplex64
} from '../../../../src/lib/f_func';

import {
    bandmatrix_nxm_ku_kl,
    diagonal_nxn,
    matrix_mxn,
    vector
} from '../../../matrices';

const pI = Infinity;
const nI = -Infinity;
const { PI, sin, cos, abs, sqrt } = Math;

const cospi = x => cos(PI * x);
const sinpi = x => sin(PI * x);


export const fixture = {
    ctrsm: {
        case0: {
            desc: '(trivial) m=0',
            input: {
                side: 'l',
                uplo: 'u',
                transA: 'n',
                diag: 'n',
                ldb: 4,
                m: 0,
                n: 6,
                lda: 6,
                alpha: complex(0.2, 0.8),
                a: (() => {
                    const m = matrix_mxn(6, 6);
                    return m;
                })(),
                b: (() => {
                    const m = matrix_mxn(6, 6);
                    return m;
                })(),

            },
            expect: {
                b: (() => {
                    const m = matrix_mxn(6, 6);
                    return m.toArr();
                })(),
            },
        },
        case1: {
            desc: '(trivial) n=0',
            input: {
                side: 'l',
                uplo: 'u',
                transA: 'n',
                diag: 'n',
                ldb: 4,
                m: 4,
                n: 0,
                lda: 6,
                alpha: complex(0.2, 0.8),
                a: (() => {
                    const m = matrix_mxn(6, 6);
                    //do some stuff here
                    return m;
                })(),
                b: (() => {
                    const m = matrix_mxn(6, 6);
                    //do some stuff here
                    return m;
                })(),
            },
            expect: {
                b: (() => {
                    const m = matrix_mxn(6, 6);
                    // do stuff here
                    return m.toArr();
                })(),
            },
        },
        case2: {
            desc: '(near trivial) alpha=(0,0)',
            input: {
                side: 'l',
                uplo: 'u',
                transA: 'n',
                diag: 'n',
                ldb: 6,
                m: 4,
                n: 6,
                lda: 6,
                alpha: complex(0, 0),
                a: (() => {
                    const m = matrix_mxn(6, 6);
                    //do some stuff here
                    return m;
                })(),
                b: (() => {
                    const m = matrix_mxn(6, 6);
                    //do some stuff here
                    return m;
                })(),
            },
            expect: {
                b: [
                    complex(0.0000000000000000, 0.0000000000000000),
                    complex(0.0000000000000000, 0.0000000000000000),
                    complex(0.0000000000000000, 0.0000000000000000),
                    complex(0.0000000000000000, 0.0000000000000000),
                    complex(0.41464143991470337, 1.7579030990600586),
                    complex(-1.5399500131607056, 0.56074607372283936),
                    complex(0.0000000000000000, 0.0000000000000000),
                    complex(0.0000000000000000, 0.0000000000000000),
                    complex(0.0000000000000000, 0.0000000000000000),
                    complex(0.0000000000000000, 0.0000000000000000),
                    complex(0.76359343528747559, -1.5637820959091187),
                    complex(-0.79900926351547241, 1.1565370559692383),
                    complex(0.0000000000000000, 0.0000000000000000),
                    complex(0.0000000000000000, 0.0000000000000000),
                    complex(0.0000000000000000, 0.0000000000000000),
                    complex(0.0000000000000000, 0.0000000000000000),
                    complex(0.25222346186637878, 2.4413645267486572),
                    complex(-0.89192110300064087, -0.79533910751342773),
                    complex(0.0000000000000000, 0.0000000000000000),
                    complex(0.0000000000000000, 0.0000000000000000),
                    complex(0.0000000000000000, 0.0000000000000000),
                    complex(0.0000000000000000, 0.0000000000000000),
                    complex(0.13333636522293091, -2.2239003181457520),
                    complex(0.80418950319290161, -1.2636144161224365),
                    complex(0.0000000000000000, 0.0000000000000000),
                    complex(0.0000000000000000, 0.0000000000000000),
                    complex(0.0000000000000000, 0.0000000000000000),
                    complex(0.0000000000000000, 0.0000000000000000),
                    complex(-1.2845993041992188, -0.81496870517730713),
                    complex(4.6726170927286148E-002, 0.24226348102092743),
                    complex(0.0000000000000000, 0.0000000000000000),
                    complex(0.0000000000000000, 0.0000000000000000),
                    complex(0.0000000000000000, 0.0000000000000000),
                    complex(0.0000000000000000, 0.0000000000000000),
                    complex(0.72675073146820068, 1.9156390801072121E-002),
                    complex(1.1519117355346680, 0.25733837485313416),
                ]
            },
        },
        case3: {
            desc: 'side=l, uplo=u, diag=n, transA=n, alpha=(0.2,0.6)',
            input: {
                side: 'l',
                uplo: 'u',
                transA: 'n',
                diag: 'n',
                ldb: 6,
                lda: 6,
                m: 4,
                n: 6,
                alpha: complex(0.2, 0.6),
                a: (() => {
                    const m = matrix_mxn(6, 6);
                    return m;
                })(),
                b: (() => {
                    const m = matrix_mxn(6, 6);
                    return m;
                })(),
            },
            expect: {
                b: [
                    complex(-4.3361652432024105, 5.0817591262333144E-002),
                    complex(-2.0249635404714752, 1.7462050727369067),
                    complex(0.77158003384479212, -3.8415480814979444),
                    complex(0.21570408905600796, 1.9735891392210492),
                    complex(0.41464143991470337, 1.7579030990600586),
                    complex(-1.5399500131607056, 0.56074607372283936),
                    complex(-8.2139495894393040, 4.8677252138520410),
                    complex(-2.0039016266034926, 1.9845593475367109),
                    complex(-6.4454152206686262, -5.2771742255747300),
                    complex(1.2223454650802608, 3.8174245842806820),
                    complex(0.76359343528747559, -1.5637820959091187),
                    complex(-0.79900926351547241, 1.1565370559692383),
                    complex(1.3857920232502359, 1.1657342725850861),
                    complex(0.54529105274886491, 0.44716783611311939),
                    complex(-0.28228804719577089, 1.9103995406836893),
                    complex(0.63791932476091384, -0.56208167491729433),
                    complex(0.25222346186637878, 2.4413645267486572),
                    complex(-0.89192110300064087, -0.79533910751342773),
                    complex(0.0000000000000000, 0.0000000000000000),
                    complex(0.0000000000000000, 0.0000000000000000),
                    complex(0.0000000000000000, 0.0000000000000000),
                    complex(0.20000000298023224, 0.60000002384185791),
                    complex(0.13333636522293091, -2.2239003181457520),
                    complex(0.80418950319290161, -1.2636144161224365),
                    complex(0.46993546772940703, 0.78297017799556667),
                    complex(1.2442533187414169, 0.70748691739496816),
                    complex(-0.30235439589226298, -0.45135362987370048),
                    complex(0.28821575391397702, -1.0280578753313314),
                    complex(-1.2845993041992188, -0.81496870517730713),
                    complex(4.6726170927286148E-002, 0.24226348102092743),
                    complex(3.0644786953144361, -1.0535611790318242),
                    complex(1.0022406100444330, -0.63771156883787317),
                    complex(0.85792295390476214, 2.2260221537764036),
                    complex(7.0206819964166410E-003, -0.99474760661160389),
                    complex(0.72675073146820068, 1.9156390801072121E-002),
                    complex(1.1519117355346680, 0.25733837485313416),
                ]
            },
        },
        case4: {
            desc: 'side=l, uplo=u, diag=u, transA=n, alpha=(1,0)',
            input: {
                side: 'l',
                uplo: 'u',
                transA: 'n',
                diag: 'u',
                ldb: 6,
                lda: 6,
                m: 4,
                n: 6,
                alpha: complex(1, 0),
                a: (() => {
                    const m = matrix_mxn(6, 6);
                    return m;
                })(),
                b: (() => {
                    const m = matrix_mxn(6, 6);
                    m.r[0] = 0;
                    m.i[0] = 0;
                    return m;
                })(),
            },
            expect: {
                b: [
                    complex(3.1357042123101007, -0.48593408612451361),
                    complex(1.5076802903345801, -0.65299323707765800),
                    complex(1.4424603689891793, 0.38898484777779974),
                    complex(1.2724293470382690, -0.27934628725051880),
                    complex(0.41464143991470337, 1.7579030990600586),
                    complex(-1.5399500131607056, 0.56074607372283936),
                    complex(-1.0903241741144321E-002, -5.0565088147146966),
                    complex(3.0358020761002358, -3.6179178067549391),
                    complex(-0.12527489724061169, -2.8922090420482398),
                    complex(2.4046533107757568, -1.0655906200408936),
                    complex(0.76359343528747559, -1.5637820959091187),
                    complex(-0.79900926351547241, 1.1565370559692383),
                    complex(-2.1159829697342700, 0.89955289343691880),
                    complex(-1.1728210756763398, -0.60629526905397835),
                    complex(-0.62439769834025860, 0.43606883898065529),
                    complex(-0.41151082515716553, -0.37670272588729858),
                    complex(0.25222346186637878, 2.4413645267486572),
                    complex(-0.89192110300064087, -0.79533910751342773),
                    complex(-0.60259431373043126, 0.19430198654291148),
                    complex(-0.96368974491656223, -1.3678721751645730E-002),
                    complex(-0.24635347713030731, 0.34620704036331307),
                    complex(0.37739565968513489, -0.17262350022792816),
                    complex(0.13333636522293091, -2.2239003181457520),
                    complex(0.80418950319290161, -1.2636144161224365),
                    complex(0.75296106115355377, -0.91333951592953333),
                    complex(-9.1086915462928464E-003, 5.7624376681352174E-002),
                    complex(0.85920242744986552, -0.53944747954431049),
                    complex(-0.69095385074615479, -0.11582532525062561),
                    complex(-1.2845993041992188, -0.81496870517730713),
                    complex(4.6726170927286148E-002, 0.24226348102092743),
                    complex(-1.8493189366425806, -0.38904525818272895),
                    complex(-1.6372872292772385, 0.67912994685483496),
                    complex(-0.53860198366790479, 0.66458617098718398),
                    complex(-0.64947164058685303, 6.5288178622722626E-002),
                    complex(0.72675073146820068, 1.9156390801072121E-002),
                    complex(1.1519117355346680, 0.25733837485313416),
                ]
            },
        },
        case5: {
            desc: 'side=l, uplo=l, diag=n, transA=n, alpha=(1,0)',
            input: {
                side: 'l',
                uplo: 'l',
                transA: 'n',
                diag: 'n',
                ldb: 6,
                lda: 6,
                m: 4,
                n: 6,
                alpha: complex(1, 0),
                a: (() => {
                    const m = matrix_mxn(6, 6);
                    return m;
                })(),
                b: (() => {
                    const m = matrix_mxn(6, 6);
                    m.r[0] = 0;
                    m.i[0] = 0;
                    return m;
                })(),
            },
            expect: {
                b: [
                    complex(0.0000000000000000, 0.0000000000000000),
                    complex(0.58206704082275329, -0.18591136302847366),
                    complex(0.28806021270856080, -6.1480539743304119),
                    complex(7.1273053520156848, -1.0683377591471988),
                    complex(0.41464143991470337, 1.7579030990600586),
                    complex(-1.5399500131607056, 0.56074607372283936),
                    complex(-0.62880887442171129, 0.13547227203129142),
                    complex(1.3408230860318302, -0.19575665942292952),
                    complex(-0.65175602235460295, -3.9049750709800799),
                    complex(4.3369827125323317, -1.6373325133299099),
                    complex(0.76359343528747559, -1.5637820959091187),
                    complex(-0.79900926351547241, 1.1565370559692383),
                    complex(-0.24188009916959066, 0.84882803045460142),
                    complex(0.33523339068246111, -0.76216414512317321),
                    complex(-3.9585769323813955, -2.9313047246339132),
                    complex(0.15295088136724475, -5.3139192718351618),
                    complex(0.25222346186637878, 2.4413645267486572),
                    complex(-0.89192110300064087, -0.79533910751342773),
                    complex(0.19221290948158870, -0.19445162886640396),
                    complex(0.12525595232395595, -1.2672383707009358),
                    complex(-0.12450969245726197, -2.7096060848420587),
                    complex(2.6812148155230839, 6.9161957114693058),
                    complex(0.13333636522293091, -2.2239003181457520),
                    complex(0.80418950319290161, -1.2636144161224365),
                    complex(0.11002148798912938, 0.19760805055335301),
                    complex(-0.27947495342059742, 0.44740273115904228),
                    complex(-3.9928312766723866, 2.0068294154442317),
                    complex(-4.3769158322166435, -8.3308451200685276),
                    complex(-1.2845993041992188, -0.81496870517730713),
                    complex(4.6726170927286148E-002, 0.24226348102092743),
                    complex(-0.66356096090001560, -0.60710000635792616),
                    complex(0.31367418621923127, -0.48814816511347880),
                    complex(3.2173115764366944, -4.6263877632965906),
                    complex(5.5336342188508736, 6.4226727706510829),
                    complex(0.72675073146820068, 1.9156390801072121E-002),
                    complex(1.1519117355346680, 0.25733837485313416),
                ]
            },
        },
        case6: {
            desc: 'side=l, uplo=l, diag=u, transA=n, alpha=(0.5,0.5)',
            input: {
                side: 'l',
                uplo: 'l',
                transA: 'n',
                diag: 'u',
                ldb: 6,
                lda: 6,
                m: 4,
                n: 6,
                alpha: complex(0.5, 0.5),
                a: (() => {
                    const m = matrix_mxn(6, 6);
                    return m;
                })(),
                b: (() => {
                    const m = matrix_mxn(6, 6);
                    m.r[0] = 0;
                    m.i[0] = 0;
                    return m;
                })(),
            },
            expect: {
                b: [
                    complex(0.0000000000000000, 0.0000000000000000),
                    complex(5.1639869809150696E-002, -0.37787322700023651),
                    complex(0.48686117026629383, 1.3421140072087849),
                    complex(0.74914063644201700, 2.1959189696717472),
                    complex(0.41464143991470337, 1.7579030990600586),
                    complex(-1.5399500131607056, 0.56074607372283936),
                    complex(-0.23789153993129730, -0.69067551195621490),
                    complex(0.48770744682920997, -0.89088078863640652),
                    complex(1.0835713226638233, 1.1906803067326432),
                    complex(2.0046754793261115, 5.0420310426421393),
                    complex(0.76359343528747559, -1.5637820959091187),
                    complex(-0.79900926351547241, 1.1565370559692383),
                    complex(-0.98985207080841064, -0.15780496597290039),
                    complex(-0.28620991205186996, -0.73503080754954908),
                    complex(1.6940324753771179, 1.0809248721181137),
                    complex(3.0475979083799656, 2.0756479979078910),
                    complex(0.25222346186637878, 2.4413645267486572),
                    complex(-0.89192110300064087, -0.79533910751342773),
                    complex(0.24528039246797562, 0.19040291756391525),
                    complex(-0.74560179064123067, -0.32623164318062758),
                    complex(-0.13538034192478071, -1.2316202153710734),
                    complex(2.4585066717163002, -0.63922548185124539),
                    complex(0.13333636522293091, -2.2239003181457520),
                    complex(0.80418950319290161, -1.2636144161224365),
                    complex(-0.20791782997548580, 0.15081105567514896),
                    complex(0.12472167807203721, 0.20617742099636954),
                    complex(1.2366470065183444, 0.27616290202981536),
                    complex(-0.17988283247608949, -0.43675772068299790),
                    complex(-1.2845993041992188, -0.81496870517730713),
                    complex(4.6726170927286148E-002, 0.24226348102092743),
                    complex(0.59469593316316605, -0.83040248602628708),
                    complex(9.6263683752580986E-002, -0.10394887225038407),
                    complex(-2.0381596972484126, 0.38710425384444547),
                    complex(-1.9873804651826856, 0.67471881850332560),
                    complex(0.72675073146820068, 1.9156390801072121E-002),
                    complex(1.1519117355346680, 0.25733837485313416),
                ]
            },
        },
        case7: {
            desc: 'side=l, uplo=u, diag=n, transA=t, alpha=(0.5,0.5)',
            input: {
                side: 'l',
                uplo: 'u',
                transA: 't',
                diag: 'n',
                ldb: 6,
                lda: 6,
                m: 4,
                n: 6,
                alpha: complex(0.5, 0.5),
                a: (() => {
                    const m = matrix_mxn(6, 6);
                    return m;
                })(),
                b: (() => {
                    const m = matrix_mxn(6, 6);
                    m.r[0] = 0;
                    m.i[0] = 0;
                    return m;
                })(),
            },
            expect: {
                b: [
                    complex(0.0000000000000000, 0.0000000000000000),
                    complex(0.38398920192561342, 0.19807783889713979),
                    complex(2.1623518366641039, -2.8514495652032292),
                    complex(1.3835248630505073, -2.8932506519951993),
                    complex(0.41464143991470337, 1.7579030990600586),
                    complex(-1.5399500131607056, 0.56074607372283936),
                    complex(-0.38214057322650141, -0.24666830119520999),
                    complex(1.0213420938507443, 0.39242684666128896),
                    complex(-0.60797340845888548, 0.14612637589888017),
                    complex(5.6825201168694779, 6.2951878938888370),
                    complex(0.76359343528747559, -1.5637820959091187),
                    complex(-0.79900926351547241, 1.1565370559692383),
                    complex(-0.54535406481209603, 0.30347396564250545),
                    complex(0.49397370175638877, -0.63613068005243234),
                    complex(1.8719258117215858, -0.72013420143310292),
                    complex(4.1735067269985384, -5.4728121981207432),
                    complex(0.25222346186637878, 2.4413645267486572),
                    complex(-0.89192110300064087, -0.79533910751342773),
                    complex(0.19333226917399632, -1.1193596924076359E-003),
                    complex(0.64810480211333787, -0.44805523663770835),
                    complex(-7.9247902684516022E-002, -0.24587783876929911),
                    complex(2.1687405694259594, -0.62240370647012444),
                    complex(0.13333636522293091, -2.2239003181457520),
                    complex(0.80418950319290161, -1.2636144161224365),
                    complex(-4.3793281282111809E-002, 0.15381476927124119),
                    complex(-0.44995544389580200, 1.7313769981318280E-002),
                    complex(-1.4727853010824283, -1.9391129513978369),
                    complex(-5.3054338206921674, -2.0641789602449854),
                    complex(-1.2845993041992188, -0.81496870517730713),
                    complex(4.6726170927286148E-002, 0.24226348102092743),
                    complex(-2.8230477271044732E-002, -0.63533048362897082),
                    complex(0.81110859934416335, 5.5392721986944740E-002),
                    complex(0.27631589848386190, 2.2432587748416113),
                    complex(4.5434806476144285, 2.5580388858223335),
                    complex(0.72675073146820068, 1.9156390801072121E-002),
                    complex(1.1519117355346680, 0.25733837485313416),
                ]
            },
        },
        case8: {
            desc: 'side=l, uplo=u, diag=u, transA=c, alpha=(0.5,0.5)',
            input: {
                side: 'l',
                uplo: 'u',
                transA: 'c',
                diag: 'u',
                ldb: 6,
                lda: 6,
                m: 4,
                n: 6,
                alpha: complex(0.5, 0.5),
                a: (() => {
                    const m = matrix_mxn(6, 6);
                    return m;
                })(),
                b: (() => {
                    const m = matrix_mxn(6, 6);
                    m.r[0] = 0;
                    m.i[0] = 0;
                    return m;
                })(),
            },
            expect: {
                b: [
                    complex(0.0000000000000000, 0.0000000000000000),
                    complex(5.1639869809150696E-002, -0.37787322700023651),
                    complex(-2.5206088289136730E-002, 1.1629327100576257),
                    complex(0.20968760493191496, 0.28705110973472481),
                    complex(0.41464143991470337, 1.7579030990600586),
                    complex(-1.5399500131607056, 0.56074607372283936),
                    complex(-0.23789153993129730, -0.69067551195621490),
                    complex(-0.26496362306923205, -1.0970069132074767),
                    complex(0.55598041415056509, -1.8340719617223418),
                    complex(3.0059601094679920, -0.50795685485326569),
                    complex(0.76359343528747559, -1.5637820959091187),
                    complex(-0.79900926351547241, 1.1565370559692383),
                    complex(-0.98985207080841064, -0.15780496597290039),
                    complex(-1.0216620259901958, 4.3261524908377424E-002),
                    complex(-1.5732830857475251, -0.77647276535364917),
                    complex(-0.74275730651301819, -1.6198648887095417),
                    complex(0.25222346186637878, 2.4413645267486572),
                    complex(-0.89192110300064087, -0.79533910751342773),
                    complex(0.24528039246797562, 0.19040291756391525),
                    complex(-0.42986920954526320, -0.42795572168039819),
                    complex(-0.51989924351798744, 0.59343464735270501),
                    complex(-0.72982011491647292, -0.81950525704073118),
                    complex(0.13333636522293091, -2.2239003181457520),
                    complex(0.80418950319290161, -1.2636144161224365),
                    complex(-0.20791782997548580, 0.15081105567514896),
                    complex(0.13254591571963054, 0.48046129330801096),
                    complex(0.79669860642500856, 0.18158566971985768),
                    complex(-7.8444567809192706E-002, 0.70333648715206487),
                    complex(-1.2845993041992188, -0.81496870517730713),
                    complex(4.6726170927286148E-002, 0.24226348102092743),
                    complex(0.59469593316316605, -0.83040248602628708),
                    complex(-0.27819259697802301, -1.1288267484212382),
                    complex(0.69543869186319496, -0.81416188441863024),
                    complex(-6.4642539030115742E-002, -1.1821286829537094),
                    complex(0.72675073146820068, 1.9156390801072121E-002),
                    complex(1.1519117355346680, 0.25733837485313416),
                ]
            },
        },
        case9: {
            desc: 'side=l, uplo=l, diag=u, transA=c, alpha=(0.5,0.5)',
            input: {
                side: 'l',
                uplo: 'l',
                transA: 'c',
                diag: 'u',
                ldb: 6,
                lda: 6,
                m: 4,
                n: 6,
                alpha: complex(0.5, 0.5),
                a: (() => {
                    const m = matrix_mxn(6, 6);
                    return m;
                })(),
                b: (() => {
                    const m = matrix_mxn(6, 6);
                    m.r[0] = 0;
                    m.i[0] = 0;
                    return m;
                })(),
            },
            expect: {
                b: [
                    complex(-4.3307363060096407, -2.7946345411910478),
                    complex(0.11353332791702542, -3.0358071189164932),
                    complex(0.55208236183382731, 1.1961048753180581),
                    complex(0.77588781714439392, 0.49654152989387512),
                    complex(0.41464143991470337, 1.7579030990600586),
                    complex(-1.5399500131607056, 0.56074607372283936),
                    complex(-7.0311438643010415, 1.1171425552589795),
                    complex(-4.3062336946982169, -5.8321251417984232),
                    complex(1.5466374403877694, -0.96427463617099818),
                    complex(1.7351219654083252, 0.66953134536743164),
                    complex(0.76359343528747559, -1.5637820959091187),
                    complex(-0.79900926351547241, 1.1565370559692383),
                    complex(4.1622765398091177E-002, 0.69521904772987897),
                    complex(-0.61253900315441545, 1.2181547686081091),
                    complex(-0.43829928629757298, -0.17216192477108372),
                    complex(-1.7404049634933472E-002, -0.39410677552223206),
                    complex(0.25222346186637878, 2.4413645267486572),
                    complex(-0.89192110300064087, -0.79533910751342773),
                    complex(-0.56549284412051548, -0.27538989181529694),
                    complex(-1.1394971980570936, -0.71775698460253956),
                    complex(-0.26951704658019660, 0.13552381773097144),
                    complex(0.27500957995653152, 0.10238607972860336),
                    complex(0.13333636522293091, -2.2239003181457520),
                    complex(0.80418950319290161, -1.2636144161224365),
                    complex(-0.50287091838029463, 1.6264350851089353),
                    complex(0.54062240916135029, 0.65614164017279974),
                    complex(0.74291551890930574, 1.4887190977662890E-002),
                    complex(-0.28756426274776459, -0.40338958799839020),
                    complex(-1.2845993041992188, -0.81496870517730713),
                    complex(4.6726170927286148E-002, 0.24226348102092743),
                    complex(2.5860416002659656, -0.44334652705500277),
                    complex(-7.5655716285016883E-004, 1.6918377805927700),
                    complex(-0.59795894462510213, -7.8021761167668346E-002),
                    complex(-0.35737990960478783, -0.29209173098206520),
                    complex(0.72675073146820068, 1.9156390801072121E-002),
                    complex(1.1519117355346680, 0.25733837485313416),
                ]
            },
        },
        case10: {
            desc: 'side=l, uplo=l, diag=n, transA=c, alpha=(0.5,0.5)',
            input: {
                side: 'l',
                uplo: 'l',
                transA: 'c',
                diag: 'n',
                ldb: 6,
                lda: 6,
                m: 4,
                n: 6,
                alpha: complex(0.5, 0.5),
                a: (() => {
                    const m = matrix_mxn(6, 6);
                    return m;
                })(),
                b: (() => {
                    const m = matrix_mxn(6, 6);
                    m.r[0] = 0;
                    m.i[0] = 0;
                    return m;
                })(),
            },
            expect: {
                b: [
                    complex(3.2114827761694884, -1.2846095423412685),
                    complex(1.5503648408551474, 4.4080590332372749),
                    complex(-2.9600976780577679, 0.68164714071945287),
                    complex(2.1978716763715078, 0.31038308221278982),
                    complex(0.41464143991470337, 1.7579030990600586),
                    complex(-1.5399500131607056, 0.56074607372283936),
                    complex(-3.7806964953253734, -11.234685472902157),
                    complex(-4.0624048931288526, 2.7647600951936040),
                    complex(-0.37132049362104180, 8.2950004471256946),
                    complex(4.4732081518896267, -0.27199439215993904),
                    complex(0.76359343528747559, -1.5637820959091187),
                    complex(-0.79900926351547241, 1.1565370559692383),
                    complex(-2.4119174862654607, 1.7225886543340081),
                    complex(0.51499044925440918, 0.96123297937376218),
                    complex(1.7893302398404849, -0.91785955565342003),
                    complex(-0.43315265585394902, -0.84615294251694417),
                    complex(0.25222346186637878, 2.4413645267486572),
                    complex(-0.89192110300064087, -0.79533910751342773),
                    complex(-0.78423006077463697, 1.0670162040634159),
                    complex(-0.75490610486826837, 3.3772776763820724),
                    complex(0.42956905016845520, -8.2012070905188875E-002),
                    complex(0.70524435153594800, -5.1287470464435207E-002),
                    complex(0.13333636522293091, -2.2239003181457520),
                    complex(0.80418950319290161, -1.2636144161224365),
                    complex(1.9108710108976654, -0.95994065844713927),
                    complex(3.3809090757975113, -4.0033212630382105),
                    complex(-1.0378465905588075, 0.19755007267142216),
                    complex(-1.0344527435182400, -0.59571097023070418),
                    complex(-1.2845993041992188, -0.81496870517730713),
                    complex(4.6726170927286148E-002, 0.24226348102092743),
                    complex(-0.22005186087559850, 2.9083748042948385),
                    complex(0.29861845576296858, 0.26813155878356687),
                    complex(1.3335283313160229, -1.8440141707310576),
                    complex(-1.0758836637869365, -0.28184989512031339),
                    complex(0.72675073146820068, 1.9156390801072121E-002),
                    complex(1.1519117355346680, 0.25733837485313416),
                ]
            },
        },
        case11: {
            desc: 'side=l, uplo=l, diag=n, transA=t, alpha=(0.5,0.5)',
            input: {
                side: 'l',
                uplo: 'l',
                transA: 't',
                diag: 'n',
                ldb: 6,
                lda: 6,
                m: 4,
                n: 6,
                alpha: complex(0.5, 0.5),
                a: (() => {
                    const m = matrix_mxn(6, 6);
                    return m;
                })(),
                b: (() => {
                    const m = matrix_mxn(6, 6);
                    m.r[0] = 0;
                    m.i[0] = 0;
                    return m;
                })(),
            },
            expect: {
                b: [
                    complex(-7.8076337836157279, 4.0993206753680189),
                    complex(-1.8295479518062130, -0.24446324023732294),
                    complex(4.4597950266431416, -4.4044872370943642),
                    complex(1.2024986277707916, 1.8657370162296123),
                    complex(0.41464143991470337, 1.7579030990600586),
                    complex(-1.5399500131607056, 0.56074607372283936),
                    complex(-4.6697143593159502, 4.0692195593982010),
                    complex(4.8582332712042673, -4.5558592861194951),
                    complex(1.9409323685427113, -4.6660804469995147),
                    complex(3.1310576644680514, 3.2062517089701701),
                    complex(0.76359343528747559, -1.5637820959091187),
                    complex(-0.79900926351547241, 1.1565370559692383),
                    complex(0.30582815236225375, 0.58638190776618515),
                    complex(-1.3910001582447591, -0.62226772185487511),
                    complex(-0.77190259491118007, 0.13110199345193430),
                    complex(0.35687846744323848, -0.88104130713535689),
                    complex(0.25222346186637878, 2.4413645267486572),
                    complex(-0.89192110300064087, -0.79533910751342773),
                    complex(-2.2249105593392784, -0.42411014448576401),
                    complex(-0.17300353837081367, -2.4219792218885750),
                    complex(1.7345530403869818, -0.43268236926825521),
                    complex(0.50000000000000000, 0.50000000000000000),
                    complex(0.13333636522293091, -2.2239003181457520),
                    complex(0.80418950319290161, -1.2636144161224365),
                    complex(4.0526164462653291, 3.8090707449523515),
                    complex(-0.17682746073495273, 4.2513853938671522),
                    complex(-3.3623697809536544, -1.3367942438768332),
                    complex(-0.22581318407280718, -1.1721657069393052),
                    complex(-1.2845993041992188, -0.81496870517730713),
                    complex(4.6726170927286148E-002, 0.24226348102092743),
                    complex(1.6810227004728377, -2.2963693741212503),
                    complex(-0.87168363627809720, -0.35249705550733018),
                    complex(-0.83090224578331329, 1.5601685284262006),
                    complex(-0.49035311047990943, -0.99825790676839188),
                    complex(0.72675073146820068, 1.9156390801072121E-002),
                    complex(1.1519117355346680, 0.25733837485313416),
                ]
            },
        },
        case12: {
            desc: 'side=r, uplo=l, diag=n, transA=n, alpha=(1,0)',
            input: {
                side: 'r',
                uplo: 'u',
                transA: 'n',
                diag: 'n',
                ldb: 6,
                lda: 6,
                m: 4,
                n: 6,
                alpha: complex(1, 0),
                a: (() => {
                    const m = matrix_mxn(6, 6);
                    const sndCol = m.colOfEx(2);
                    m.r[sndCol + 1] = 0;
                    m.i[sndCol + 1] = 0;
                    return m;
                })(),
                b: (() => {
                    const m = matrix_mxn(6, 6);
                    //  m.r[0] = 0;
                    //  m.i[0] = 0;
                    return m;
                })(),
            },
            expect: {
                b: [
                    complex(1.0000000000000000, 0.0000000000000000),
                    complex(-0.32494072389639828, -8.4816837991899430E-002),
                    complex(1.1274062950571064, 9.4806507526275507E-002),
                    complex(0.51556383273975637, -0.62620503057994281),
                    complex(0.41464143991470337, 1.7579030990600586),
                    complex(-1.5399500131607056, 0.56074607372283936),
                    complex(0.83475377304772769, -0.82032757162082492),
                    complex(1.0000000000000000, 0.0000000000000000),
                    complex(1.2479358164593708, 0.43510358886114614),
                    complex(0.22834580111255753, 2.9709409537969433),
                    complex(0.76359343528747559, -1.5637820959091187),
                    complex(-0.79900926351547241, 1.1565370559692383),
                    complex(-0.87796857814747720, -0.62152745097636719),
                    complex(1.1146758180687049, 0.41318613334001636),
                    complex(-2.7473118247562103, -1.9306755011161216),
                    complex(0.75640273122785939, 2.7196786275350715),
                    complex(0.25222346186637878, 2.4413645267486572),
                    complex(-0.89192110300064087, -0.79533910751342773),
                    complex(1.3630350271734757, -1.5508708531377995),
                    complex(2.0066569270578576, -0.61198094792614466),
                    complex(-4.0577627131866096, 3.7895436736523278),
                    complex(2.8146419688672890, 11.595788905412597),
                    complex(0.13333636522293091, -2.2239003181457520),
                    complex(0.80418950319290161, -1.2636144161224365),
                    complex(-1.0215582491333848, 1.1481598504011052),
                    complex(-7.7769868288677713E-002, -0.35638124094632623),
                    complex(-1.2102887081426890, 0.67798051594131403),
                    complex(0.61336494161218291, -3.7104175813872953),
                    complex(-1.2845993041992188, -0.81496870517730713),
                    complex(4.6726170927286148E-002, 0.24226348102092743),
                    complex(0.46341499618686954, -2.4588520639821949),
                    complex(1.4497081868206336, -1.0608250567603350),
                    complex(-1.4813720986519567, 3.5945913575323409),
                    complex(6.2817206419285796, 10.059758391332867),
                    complex(0.72675073146820068, 1.9156390801072121E-002),
                    complex(1.1519117355346680, 0.25733837485313416),
                ]
            },
        },
        case13: {
            desc: 'side=r, uplo=u, diag=u, transA=n, alpha=(0.5,0.5)',
            input: {
                side: 'r',
                uplo: 'u',
                transA: 'n',
                diag: 'u',
                ldb: 6,
                lda: 6,
                m: 4,
                n: 6,
                alpha: complex(0.5, 0.5),
                a: (() => {
                    const m = matrix_mxn(6, 6);
                    const sndCol = m.colOfEx(2);
                    m.r[sndCol + 1] = 0;
                    m.i[sndCol + 1] = 0;
                    return m;
                })(),
                b: (() => {
                    const m = matrix_mxn(6, 6);
                    //  m.r[0] = 0;
                    //  m.i[0] = 0;
                    return m;
                })(),
            },
            expect: {
                b: [
                    complex(0.13539692759513855, 1.1275573074817657),
                    complex(5.1639869809150696E-002, -0.37787322700023651),
                    complex(4.5747578144073486E-002, 1.2840517163276672),
                    complex(0.77588781714439392, 0.49654152989387512),
                    complex(0.41464143991470337, 1.7579030990600586),
                    complex(-1.5399500131607056, 0.56074607372283936),
                    complex(-0.23789153993129730, -0.69067551195621490),
                    complex(0.26866142451763153, -0.56338186562061310),
                    complex(0.58040168578736484, -0.58616885845549405),
                    complex(1.7351219654083252, 0.66953134536743164),
                    complex(0.76359343528747559, -1.5637820959091187),
                    complex(-0.79900926351547241, 1.1565370559692383),
                    complex(0.19186785532622430, 0.76958389212650768),
                    complex(-8.0369890545353151E-002, -0.83703376502211491),
                    complex(1.1394747963304193, 1.3813165626456412),
                    complex(1.6362424742181005, 0.11842399616672594),
                    complex(0.25222346186637878, 2.4413645267486572),
                    complex(-0.89192110300064087, -0.79533910751342773),
                    complex(0.17606616332521496, -1.0346838035300410),
                    complex(-1.0895629141983747, -1.2286733396003198),
                    complex(1.1695290809520620, -1.6252183324559464),
                    complex(2.6646483567786019, -0.66186213887078860),
                    complex(0.13333636522293091, -2.2239003181457520),
                    complex(0.80418950319290161, -1.2636144161224365),
                    complex(-0.35900195330351203, -0.83780264788906567),
                    complex(0.25973652880524911, 0.35093876065416163),
                    complex(-0.34958126066018347, -0.98434771503567731),
                    complex(-0.91651662399387646, 0.29048335462677405),
                    complex(-1.2845993041992188, -0.81496870517730713),
                    complex(4.6726170927286148E-002, 0.24226348102092743),
                    complex(-0.79619965537780191, -0.44151694564207233),
                    complex(-1.1767017099032087, -1.8377205595222044),
                    complex(-0.33383555601404047, -0.34955041709655676),
                    complex(3.4023321229178332, -0.49334048025955746),
                    complex(0.72675073146820068, 1.9156390801072121E-002),
                    complex(1.1519117355346680, 0.25733837485313416),
                ]
            },
        },
        case14: {
            desc: 'side=r, uplo=l, diag=n, transA=n, alpha=(0.5,0.5)',
            input: {
                side: 'r',
                uplo: 'l',
                transA: 'n',
                diag: 'n',
                ldb: 6,
                lda: 6,
                m: 4,
                n: 6,
                alpha: complex(0.5, 0.5),
                a: (() => {
                    const m = matrix_mxn(6, 6);
                    const sndCol = m.colOfEx(4);
                    m.r[sndCol + 5] = 0;
                    m.i[sndCol + 5] = 0;
                    return m;
                })(),
                b: (() => {
                    const m = matrix_mxn(6, 6);
                    //  m.r[0] = 0;
                    //  m.i[0] = 0;
                    return m;
                })(),
            },
            expect: {
                b: [
                    complex(-5.0591574827047339, -4.9698820795136882),
                    complex(2.9311310560265698, 0.84183569622397436),
                    complex(-0.48324654918678833, 5.0127353391474108),
                    complex(2.2077061131604707, -0.69854605095628619),
                    complex(0.41464143991470337, 1.7579030990600586),
                    complex(-1.5399500131607056, 0.56074607372283936),
                    complex(7.4161663224215681, -7.1604166788591357),
                    complex(-4.0041878720215562, 0.84537171799125921),
                    complex(-2.0220733066282830, 4.2572003879524152),
                    complex(1.6417092873163666, -4.7544762316563363),
                    complex(0.76359343528747559, -1.5637820959091187),
                    complex(-0.79900926351547241, 1.1565370559692383),
                    complex(4.4918339382111698, 1.1490814311823123),
                    complex(-2.4164503859434818, 0.98547691417323224),
                    complex(0.67386215211886902, -2.3548308010299550),
                    complex(-2.1370493475834982, 0.36264306554656278),
                    complex(0.25222346186637878, 2.4413645267486572),
                    complex(-0.89192110300064087, -0.79533910751342773),
                    complex(0.88529870121310128, 3.7394932406460706),
                    complex(3.1207145954188054E-002, -2.6296541405864176),
                    complex(-0.18872533273522937, -0.53649824117162492),
                    complex(1.9029010959059771, 0.34560534292325140),
                    complex(0.13333636522293091, -2.2239003181457520),
                    complex(0.80418950319290161, -1.2636144161224365),
                    complex(0.19393416590299054, -0.20559819740708857),
                    complex(-0.27444364722333936, -9.1157251762485556E-002),
                    complex(-0.61959923233711700, 0.27973439611890816),
                    complex(0.28349760785116063, 6.1876683765610271E-002),
                    complex(-1.2845993041992188, -0.81496870517730713),
                    complex(4.6726170927286148E-002, 0.24226348102092743),
                    complex(0.33833521252830906, -0.79647519117257892),
                    complex(-0.39207809681367967, 1.0784825381357291E-002),
                    complex(-0.29892032609917235, -1.3477740218522716E-002),
                    complex(-0.34945678427345950, -0.17550224014507099),
                    complex(0.72675073146820068, 1.9156390801072121E-002),
                    complex(1.1519117355346680, 0.25733837485313416),
                ]
            },
        },
        case15: {
            desc: 'side=r, uplo=l, diag=u, transA=n, alpha=(1,0)',
            input: {
                side: 'r',
                uplo: 'l',
                transA: 'n',
                diag: 'u',
                ldb: 6,
                lda: 6,
                m: 4,
                n: 6,
                alpha: complex(1, 0),
                a: (() => {
                    const m = matrix_mxn(6, 6);
                    const sndCol = m.colOfEx(4);
                    m.r[sndCol + 5] = 0;
                    m.i[sndCol + 5] = 0;
                    return m;
                })(),
                b: (() => {
                    const m = matrix_mxn(6, 6);
                    //  m.r[0] = 0;
                    //  m.i[0] = 0;
                    return m;
                })(),
            },
            expect: {
                b: [
                    complex(-6.6958272002905428, -9.8408017913905148),
                    complex(1.0820954135679002, 7.4450156507721026),
                    complex(2.2676559308021567, 8.9629948135133084),
                    complex(0.12503837766758608, 3.1427388339321043),
                    complex(0.41464143991470337, 1.7579030990600586),
                    complex(-1.5399500131607056, 0.56074607372283936),
                    complex(-11.578342149986291, 0.42985376004126707),
                    complex(5.9537185291639814, -4.5607573260779799E-002),
                    complex(3.9950587748781672, -1.7241165222288140),
                    complex(0.83442619010886920, 2.0238907563301982),
                    complex(0.76359343528747559, -1.5637820959091187),
                    complex(-0.79900926351547241, 1.1565370559692383),
                    complex(1.7515003499232142, 1.4475852329073575),
                    complex(-1.2129598730224560, -2.6430256456877874),
                    complex(-3.2753762601352809, -2.6149090240568058),
                    complex(-5.5927101748459718E-002, 0.60692074122709005),
                    complex(0.25222346186637878, 2.4413645267486572),
                    complex(-0.89192110300064087, -0.79533910751342773),
                    complex(2.4260109525592837, 0.79332951665253049),
                    complex(-1.2633618939958353, -0.73014616027439949),
                    complex(-0.18970207664069960, -0.12906475111063909),
                    complex(0.81719485195650599, -1.0458092960671421),
                    complex(0.13333636522293091, -2.2239003181457520),
                    complex(0.80418950319290161, -1.2636144161224365),
                    complex(-0.39134241345283100, 0.48242136796994939),
                    complex(0.61762925281416070, 0.10337749901712778),
                    complex(1.1661976616820193, -0.84728125503688667),
                    complex(-0.64478958643301165, 3.8467268628461532E-002),
                    complex(-1.2845993041992188, -0.81496870517730713),
                    complex(4.6726170927286148E-002, 0.24226348102092743),
                    complex(-0.23570655286312103, -1.4250984191894531),
                    complex(-0.54288828372955322, 0.36594113707542419),
                    complex(-0.43331032991409302, 0.24841265380382538),
                    complex(-0.64947164058685303, 6.5288178622722626E-002),
                    complex(0.72675073146820068, 1.9156390801072121E-002),
                    complex(1.1519117355346680, 0.25733837485313416),
                ]
            },
        },
        case16: {
            desc: 'side=r, uplo=u, diag=n, transA=t, alpha=(1,0)',
            input: {
                side: 'r',
                uplo: 'u',
                transA: 't',
                diag: 'n',
                ldb: 6,
                lda: 6,
                m: 4,
                n: 6,
                alpha: complex(1, 0),
                a: (() => {
                    const m = matrix_mxn(6, 6);
                    const sndCol = m.colOfEx(6);
                    m.r[sndCol + 1] = 0;
                    m.i[sndCol + 1] = 0;
                    return m;
                })(),
                b: (() => {
                    const m = matrix_mxn(6, 6);
                    //  m.r[0] = 0;
                    //  m.i[0] = 0;
                    return m;
                })(),
            },
            expect: {
                b: [
                    complex(7.8548948451689302, -1.4517329494138931),
                    complex(0.17654671858140780, -9.4387634793868180),
                    complex(-1.6866026558673723, -5.6817406388088747),
                    complex(1.4772503634364491, 0.86432401936451209),
                    complex(0.41464143991470337, 1.7579030990600586),
                    complex(-1.5399500131607056, 0.56074607372283936),
                    complex(3.0601942738874301, -0.52640142985026428),
                    complex(-0.10377240436541091, -4.5596165286812198),
                    complex(-1.9464271308776548, -2.8867679752665496),
                    complex(-1.0092313646782454, 2.8010376913028976),
                    complex(0.76359343528747559, -1.5637820959091187),
                    complex(-0.79900926351547241, 1.1565370559692383),
                    complex(3.1451904940166528, 4.5341755230345697),
                    complex(6.1746224388481341, -1.5523978802792286),
                    complex(2.8268587038181350, -2.6457341517658168),
                    complex(0.85916438643265958, 1.3806202192454864),
                    complex(0.25222346186637878, 2.4413645267486572),
                    complex(-0.89192110300064087, -0.79533910751342773),
                    complex(0.66157852149969598, -2.9363489396777793),
                    complex(-4.6190308173430674, 1.6665280458734388E-002),
                    complex(-3.2210325377066784, 2.6195232296555249),
                    complex(0.46205850474058635, 0.25996805243186816),
                    complex(0.13333636522293091, -2.2239003181457520),
                    complex(0.80418950319290161, -1.2636144161224365),
                    complex(-0.56086837139946488, -0.57227130068735377),
                    complex(-0.33320568373813664, 0.44221914298914511),
                    complex(-0.32953615350602994, 1.0981416447601218),
                    complex(0.25166817252864804, 2.1087441370453971E-002),
                    complex(-1.2845993041992188, -0.81496870517730713),
                    complex(4.6726170927286148E-002, 0.24226348102092743),
                    complex(-0.45813997864426981, -1.1348104037008879),
                    complex(-0.38129327143232239, 0.40286292219503700),
                    complex(-0.31239806631769507, 0.28544258588064964),
                    complex(-0.52495902441853048, 0.17395454412838854),
                    complex(0.72675073146820068, 1.9156390801072121E-002),
                    complex(1.1519117355346680, 0.25733837485313416),
                ]
            },
        },
        case17: {
            desc: 'side=r, uplo=u, diag=n, transA=c, alpha=(0.5,0.5)',
            input: {
                side: 'r',
                uplo: 'u',
                transA: 'c',
                diag: 'n',
                ldb: 6,
                lda: 6,
                m: 4,
                n: 6,
                alpha: complex(0.5, 0.5),
                a: (() => {
                    const m = matrix_mxn(6, 6);
                    const sndCol = m.colOfEx(6);
                    m.r[sndCol + 1] = 0;
                    m.i[sndCol + 1] = 0;
                    return m;
                })(),
                b: (() => {
                    const m = matrix_mxn(6, 6);
                    //  m.r[0] = 0;
                    //  m.i[0] = 0;
                    return m;
                })(),
            },
            expect: {
                b: [
                    complex(-3.0948252942705481, -1.9275733244214712),
                    complex(-2.2771057201456189, 6.7125960840252308),
                    complex(1.1694157169980317, 4.6294937060395656),
                    complex(-0.99372825711811785, -0.70202448069359713),
                    complex(0.41464143991470337, 1.7579030990600586),
                    complex(-1.5399500131607056, 0.56074607372283936),
                    complex(-3.3124587735883360, -2.2114675151228083),
                    complex(-2.0844789793040022, 2.8327856044464470),
                    complex(-0.66765113059000436, 2.5580150700359718),
                    complex(-0.42212007137943308, -3.0184137084415688),
                    complex(0.76359343528747559, -1.5637820959091187),
                    complex(-0.79900926351547241, 1.1565370559692383),
                    complex(-0.84428411895238664, -4.6540299328827861E-002),
                    complex(4.5701707231640540, 2.8788197410972991),
                    complex(2.8557874451127794, -1.1026660085131712),
                    complex(0.44752797709352565, 1.5446757675856397),
                    complex(0.25222346186637878, 2.4413645267486572),
                    complex(-0.89192110300064087, -0.79533910751342773),
                    complex(2.1148935369493174, -1.6827616463576003),
                    complex(-3.3297218991252682, -0.76255350465697669),
                    complex(-2.5363952950995974, 0.63347645132551478),
                    complex(0.31328580158181496, -0.18523871996536231),
                    complex(0.13333636522293091, -2.2239003181457520),
                    complex(0.80418950319290161, -1.2636144161224365),
                    complex(0.57456590107976302, -8.8809162578436129E-002),
                    complex(-0.16497185113755669, -0.37989437108374974),
                    complex(-0.61122985871044555, -0.51917723027390406),
                    complex(-6.0673355220776104E-003, 0.13978852736700292),
                    complex(-1.2845993041992188, -0.81496870517730713),
                    complex(4.6726170927286148E-002, 0.24226348102092743),
                    complex(0.64511978367810352, -0.57677024099470420),
                    complex(-0.35939234778477547, -0.15709451554172907),
                    complex(-0.26476595202960435, -0.13940588754600997),
                    complex(-0.24154617714782373, -0.30753296518577905),
                    complex(0.72675073146820068, 1.9156390801072121E-002),
                    complex(1.1519117355346680, 0.25733837485313416),
                ]
            },
        },
        case18: {
            desc: 'side=r, uplo=u, diag=u, transA=c, alpha=(0.5,0.5)',
            input: {
                side: 'r',
                uplo: 'u',
                transA: 'c',
                diag: 'u',
                ldb: 6,
                lda: 6,
                m: 4,
                n: 6,
                alpha: complex(0.5, 0.5),
                a: (() => {
                    const m = matrix_mxn(6, 6);
                    const sndCol = m.colOfEx(6);
                    m.r[sndCol + 1] = 0;
                    m.i[sndCol + 1] = 0;
                    return m;
                })(),
                b: (() => {
                    const m = matrix_mxn(6, 6);
                    //  m.r[0] = 0;
                    //  m.i[0] = 0;
                    return m;
                })(),
            },
            expect: {
                b: [
                    complex(1.4663099214223421, -0.54047488085955897),
                    complex(-1.0204397181828506, -3.5613197699753938),
                    complex(-1.7781817782592808, -1.5049934545330819),
                    complex(2.5922105922742009, -0.63377311418065152),
                    complex(0.41464143991470337, 1.7579030990600586),
                    complex(-1.5399500131607056, 0.56074607372283936),
                    complex(1.2094864316776728, -1.1285628157472671),
                    complex(-1.3817072381689259, -2.0415375192838203),
                    complex(-0.67901643050722904, -0.71060499057503734),
                    complex(1.6230565715427296, 8.7107442658439282E-002),
                    complex(0.76359343528747559, -1.5637820959091187),
                    complex(-0.79900926351547241, 1.1565370559692383),
                    complex(0.76899320603609500, -0.33665447309721686),
                    complex(-0.42206523221567682, -1.7558900195297258),
                    complex(-1.6341374336066268, -1.3047464365950561),
                    complex(-0.10506998091690464, -0.41386835171297720),
                    complex(0.25222346186637878, 2.4413645267486572),
                    complex(-0.89192110300064087, -0.79533910751342773),
                    complex(0.34312377243436221, 0.29126813394857332),
                    complex(-0.59107151240193612, -0.44049830808773233),
                    complex(0.25129888652231969, 6.0485041120495686E-002),
                    complex(2.3674373162191606E-002, -0.24485534476133647),
                    complex(0.13333636522293091, -2.2239003181457520),
                    complex(0.80418950319290161, -1.2636144161224365),
                    complex(-0.62420601985847957, 0.76569889751124731),
                    complex(0.58926779084209124, 0.30187454338941599),
                    complex(1.2627016079606279, 0.13321771628270229),
                    complex(-2.2242728681991536E-002, -0.19795781806420257),
                    complex(-1.2845993041992188, -0.81496870517730713),
                    complex(4.6726170927286148E-002, 0.24226348102092743),
                    complex(0.59469593316316605, -0.83040248602628708),
                    complex(-0.45441471040248871, -8.8473573327064514E-002),
                    complex(-0.34086149185895920, -9.2448838055133820E-002),
                    complex(-0.35737990960478783, -0.29209173098206520),
                    complex(0.72675073146820068, 1.9156390801072121E-002),
                    complex(1.1519117355346680, 0.25733837485313416),
                ]
            },
        },
        case19: {
            desc: 'side=r, uplo=l, diag=u, transA=c, alpha=(0.5,0.5)',
            input: {
                side: 'r',
                uplo: 'l',
                transA: 'c',
                diag: 'u',
                ldb: 6,
                lda: 6,
                m: 4,
                n: 6,
                alpha: complex(0.5, 0.5),
                a: (() => {
                    const m = matrix_mxn(6, 6);
                    const sndCol = m.colOfEx(6);
                    m.r[sndCol + 1] = 0;
                    m.i[sndCol + 1] = 0;
                    return m;
                })(),
                b: (() => {
                    const m = matrix_mxn(6, 6);
                    //  m.r[0] = 0;
                    //  m.i[0] = 0;
                    return m;
                })(),
            },
            expect: {
                b: [
                    complex(0.13539692759513855, 1.1275573074817657),
                    complex(5.1639869809150696E-002, -0.37787322700023651),
                    complex(4.5747578144073486E-002, 1.2840517163276672),
                    complex(0.77588781714439392, 0.49654152989387512),
                    complex(0.41464143991470337, 1.7579030990600586),
                    complex(-1.5399500131607056, 0.56074607372283936),
                    complex(0.29058008527797075, -0.38098345978096138),
                    complex(0.12320657268015323, -0.70883671745809140),
                    complex(1.1468431009319726, -0.18691754019113382),
                    complex(2.2015135429981934, 0.49826577653114423),
                    complex(0.76359343528747559, -1.5637820959091187),
                    complex(-0.79900926351547241, 1.1565370559692383),
                    complex(-3.0089299459903742, -1.8307466678253201),
                    complex(-0.45801261091796641, 0.16022913745305389),
                    complex(-2.1449963403544028, -3.0063718905692967),
                    complex(-1.0700898658711426, -2.6589695241604399),
                    complex(0.25222346186637878, 2.4413645267486572),
                    complex(-0.89192110300064087, -0.79533910751342773),
                    complex(-2.6445949545316561, -0.29556295457399617),
                    complex(-2.0948227033757609, 1.7843824252885900),
                    complex(-5.0929063998055071, -2.6513787852201860),
                    complex(-6.7784699393746495, -4.9813269200045633),
                    complex(0.13333636522293091, -2.2239003181457520),
                    complex(0.80418950319290161, -1.2636144161224365),
                    complex(1.8599051788280123, -1.2056064376526816),
                    complex(3.6695818046973789, 4.1045003937456315),
                    complex(0.23231737855285939, 5.1710761103511471),
                    complex(-5.7967759216873223, 10.728507916547569),
                    complex(-1.2845993041992188, -0.81496870517730713),
                    complex(4.6726170927286148E-002, 0.24226348102092743),
                    complex(-1.3376217103528405, 5.8601555037057000),
                    complex(3.2477332712224189, 1.3511749795408745),
                    complex(-4.6804535705120376, 10.494488399442380),
                    complex(-4.4990031361706428, 12.997031650006122),
                    complex(0.72675073146820068, 1.9156390801072121E-002),
                    complex(1.1519117355346680, 0.25733837485313416),
                ]
            },
        },
        case20: {
            desc: 'side=r, uplo=l, diag=n, transA=c, alpha=(0.5,0.5)',
            input: {
                side: 'r',
                uplo: 'l',
                transA: 'c',
                diag: 'n',
                ldb: 6,
                lda: 6,
                m: 4,
                n: 6,
                alpha: complex(0.5, 0.5),
                a: (() => {
                    const m = matrix_mxn(6, 6);
                    const sndCol = m.colOfEx(1);
                    m.r[sndCol + 2] = 0;
                    m.i[sndCol + 2] = 0;
                    return m;
                })(),
                b: (() => {
                    const m = matrix_mxn(6, 6);
                    //  m.r[0] = 0;
                    //  m.i[0] = 0;
                    return m;
                })(),
            },
            expect: {
                b: [

                    complex(-0.36741276127057476, 0.60415880599022287),
                    complex(0.17063020818508723, -0.16515301111800390),
                    complex(-0.47150164632793762, 0.64629932037091398),
                    complex(0.18890255218209451, 0.54155814900669563),
                    complex(0.41464143991470337, 1.7579030990600586),
                    complex(-1.5399500131607056, 0.56074607372283936),
                    complex(-0.64757290251688482, 0.51529111103843594),
                    complex(-0.70324555223933194, -7.3794940582651680E-002),
                    complex(-0.84549686891790510, -0.39807601305655405),
                    complex(5.8657242155078837E-002, -2.1061517765487783),
                    complex(0.76359343528747559, -1.5637820959091187),
                    complex(-0.79900926351547241, 1.1565370559692383),
                    complex(2.3082564821560467, 0.14524375748609208),
                    complex(-1.3792008298882079, -2.0902032907923536),
                    complex(2.5161092036627539, -0.64775118484682082),
                    complex(7.9311523789414942, -3.8428875310141279),
                    complex(0.25222346186637878, 2.4413645267486572),
                    complex(-0.89192110300064087, -0.79533910751342773),
                    complex(6.9097522767873212, -8.0215620624606707),
                    complex(-1.3869903805179185, 1.3101362478412506),
                    complex(6.1974770189667181, -2.4369489382605147),
                    complex(-1.0468654795781644, -6.8311197539077717E-002),
                    complex(0.13333636522293091, -2.2239003181457520),
                    complex(0.80418950319290161, -1.2636144161224365),
                    complex(7.7241551063563616, 11.769974991681147),
                    complex(-4.5958984169367794, -4.3485959244870882),
                    complex(0.58181540692556810, 5.4677098013019378),
                    complex(6.9066837856439438, -14.215521507415600),
                    complex(-1.2845993041992188, -0.81496870517730713),
                    complex(4.6726170927286148E-002, 0.24226348102092743),
                    complex(-14.436677303579794, -5.9238710367422076),
                    complex(0.85968153557106275, -1.6292481173854849),
                    complex(-6.0115478281876165, -9.3491345312296463),
                    complex(9.5649470740342544, -3.9291421855988817),
                    complex(0.72675073146820068, 1.9156390801072121E-002),
                    complex(1.1519117355346680, 0.25733837485313416),
                ]
            },
        },
        case21: {
            desc: 'side=r, uplo=l, diag=n, transA=t, alpha=(1,0)',
            input: {
                side: 'r',
                uplo: 'l',
                transA: 't',
                diag: 'n',
                ldb: 6,
                lda: 6,
                m: 4,
                n: 6,
                alpha: complex(1, 0),
                a: (() => {
                    const m = matrix_mxn(6, 6);
                    const sndCol = m.colOfEx(1);
                    m.r[sndCol + 2] = 0;
                    m.i[sndCol + 2] = 0;
                    return m;
                })(),
                b: (() => {
                    const m = matrix_mxn(6, 6);
                    //  m.r[0] = 0;
                    //  m.i[0] = 0;
                    return m;
                })(),
            },
            expect: {
                b: [

                    complex(1.0000000000000000, 0.0000000000000000),
                    complex(-0.32494072389639828, -8.4816837991899430E-002),
                    complex(1.1274062950571064, 9.4806507526275507E-002),
                    complex(0.51556383273975637, -0.62620503057994281),
                    complex(0.41464143991470337, 1.7579030990600586),
                    complex(-1.5399500131607056, 0.56074607372283936),
                    complex(0.83475377304772769, -0.82032757162082492),
                    complex(1.0000000000000000, 0.0000000000000000),
                    complex(1.2479358164593708, 0.43510358886114614),
                    complex(0.22834580111255753, 2.9709409537969433),
                    complex(0.76359343528747559, -1.5637820959091187),
                    complex(-0.79900926351547241, 1.1565370559692383),
                    complex(3.7621707201759254, 1.4653104669297830),
                    complex(2.3328393080681247, -2.7857917253735196),
                    complex(4.4060928625210982, 3.2428830175566885),
                    complex(10.126242761498597, 8.6688692872683824),
                    complex(0.25222346186637878, 2.4413645267486572),
                    complex(-0.89192110300064087, -0.79533910751342773),
                    complex(-7.2522521682739480, 10.214425752174813),
                    complex(-3.6877018325740307, 1.1359533616370237),
                    complex(-14.088127853858264, 4.3942942803299658),
                    complex(-7.6444600158468443, -0.18616402987895375),
                    complex(0.13333636522293091, -2.2239003181457520),
                    complex(0.80418950319290161, -1.2636144161224365),
                    complex(19.852281413416609, 8.0438098273014909),
                    complex(9.3221529952824742, 2.7937363849823331),
                    complex(16.862486159632002, 24.203264055511880),
                    complex(9.0583736349190165, 30.496466499458052),
                    complex(-1.2845993041992188, -0.81496870517730713),
                    complex(4.6726170927286148E-002, 0.24226348102092743),
                    complex(-6.3893276455354862, -17.559573741599259),
                    complex(3.0523282342701270, -8.7820118084014993),
                    complex(8.4826504626643384, -20.549739325639941),
                    complex(16.285707335606293, -0.53219856882880379),
                    complex(0.72675073146820068, 1.9156390801072121E-002),
                    complex(1.1519117355346680, 0.25733837485313416),
                ]
            },
        },
    },
    ctrsmErrors: {
        case0: {
            desc: 'a has no imaginary part',
            input: {
                side: 'l', //A*B
                uplo: 'u',
                transA: 'n',
                diag: 'n',
                m: 4,
                n: 6,
                lda: 6,
                ldb: 4,
                alpha: complex(0.2, 0.8),
                //
                a: [0],
                b: [complex(0, 0)]
            }
        },
        case2: {
            desc: 'b has no imaginary part',
            input: {
                side: 'l', //A*B
                uplo: 'u',
                transA: 'n',
                diag: 'n',
                m: 4,
                n: 6,
                lda: 6,
                ldb: 4,
                alpha: complex(0.2, 0.8), // B = alpha * A * B
                //dummies, its not a data test
                a: [complex(0, 0)],
                b: [0]
            }
        },
        case3: {
            desc: 'sid!="lr"',
            input: {
                side: 'x', //A*B
                uplo: 'u',
                transA: 'n',
                diag: 'n',
                m: 4,
                n: 6,
                lda: 6,
                ldb: 4,
                alpha: complex(0.2, 0.8), // B = alpha * A * B
                //dummies, its not a data test
                a: [complex(0, 0)],
                b: [complex(0, 0)]
            }
        },
        case4: {
            desc: 'uplo!="ul"',
            input: {
                side: 'l', //A*B
                uplo: 'x',
                transA: 'n',
                diag: 'n',
                m: 4,
                n: 6,
                lda: 6,
                ldb: 4,
                alpha: complex(0.2, 0.8),
                a: [complex(0, 0)],
                b: [complex(0, 0)]
            }
        },
        case5: {
            desc: 'transA!="ntc"',
            input: {
                side: 'l', //A*B
                uplo: 'u',
                transA: 'x',
                diag: 'n',
                m: 4,
                n: 6,
                lda: 6,
                ldb: 4,
                alpha: complex(0.2, 0.8),
                a: [complex(0, 0)],
                b: [complex(0, 0)]
            }
        },
        case6: {
            desc: 'diag!="un"',
            input: {
                side: 'l', //A*B
                uplo: 'u',
                transA: 'n',
                diag: 'x',
                m: 4,
                n: 6,
                lda: 6,
                ldb: 4,
                alpha: complex(0.2, 0.8),
                a: [complex(0, 0)],
                b: [complex(0, 0)]
            }
        },
        case7: {
            desc: 'm<0',
            input: {
                side: 'l', //A*B
                uplo: 'u',
                transA: 'n',
                diag: 'n',
                m: -4,
                n: 6,
                lda: 6,
                ldb: 4,
                alpha: complex(0.2, 0.8),
                a: [complex(0, 0)],
                b: [complex(0, 0)]
            }
        },
        case8: {
            desc: 'n<0',
            input: {
                side: 'l', //A*B
                uplo: 'u',
                transA: 'n',
                diag: 'n',
                m: 4,
                n: -6,
                lda: 6,
                ldb: 4,
                alpha: complex(0.2, 0.8),
                a: [complex(0, 0)],
                b: [complex(0, 0)]
            }
        },
        case9: {
            desc: 'lda< max(1,nrowA)',
            input: {
                side: 'l', //A*B
                uplo: 'u',
                transA: 'n',
                diag: 'n',
                m: 4,
                n: 6,
                lda: 3,
                ldb: 4,
                alpha: complex(0.2, 0.8),
                a: [complex(0, 0)],
                b: [complex(0, 0)]
            }
        },
        case10: {
            desc: 'ldb< max(1,m)',
            input: {
                side: 'l', //A*B
                uplo: 'u',
                transA: 'n',
                diag: 'n',
                m: 4, // A = m*m marrix , lda >= m
                n: 6, // rows in B
                lda: 6, //NBupper 4x4 of A is referenced
                ldb: 3,
                alpha: complex(0.2, 0.8),  // B = alpha * A * B
                //dummies, its not a data test
                a: [complex(0, 0)],
                b: [complex(0, 0)]
            },
        },
    },
}
